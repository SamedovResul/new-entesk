{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport react, { useState, useRef, useEffect } from 'react';\nimport { useSpring } from 'react-spring';\nimport GetDimension from './getDimension';\n\nconst scrollToRef = ref => window.scrollTo(0, ref.current.offsetTop - 150);\n\nconst EnvironmentFunctions = (Alldata, location, locationId) => {\n  _s();\n\n  const {\n    innerWidth: width\n  } = window;\n\n  if (Alldata) {\n    console.log(true);\n  } else {\n    console.log(false);\n  }\n\n  const myRef = useRef(null);\n\n  const executeScroll = () => scrollToRef(myRef); // let state = useSelector(state => state.allData)\n  // getDimension screen for responsive\n\n\n  const {\n    screenSize\n  } = GetDimension(); // scroll \n  // container height animation------------------\n\n  const container = useSpring({\n    to: [{\n      height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location ? '250px' : '300px' : screenSize.dynamicWidth < 480 ? location ? '200px' : '200px' : '400px'\n    }],\n    from: {\n      height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location ? '250px' : '400px' : screenSize.dynamicWidth < 480 ? location ? '200px' : '400px' : location ? '400px' : '550px'\n    }\n  }); // Leaf animation --------------\n\n  const leafimg = useSpring({\n    to: [{\n      top: '5%',\n      left: '50%'\n    }],\n    from: {\n      top: locationId ? locationId.id ? '0%' : '0%' : location ? location.name === name ? '0%' : '25%' : '25%',\n      left: location ? location.name === 'fromTechnology' ? '0%' : location.name === name ? '41%' : '0%' : locationId ? locationId.id === 'fromNav-environment' ? '41%' : '0%' : '30%'\n    },\n    config: {\n      duration: 500\n    }\n  }); // Gear animation --------------\n\n  const gearimg = useSpring({\n    to: [{\n      left: '0%',\n      top: width <= 768 ? location ? '37px' : '37px' : location ? '117px' : '117px'\n    }],\n    from: {\n      left: location ? location.name === 'fromTechnology' ? '50%' : '100%' : '50%',\n      top: width <= 768 ? location ? location.name === 'fromTechnology' ? '-37px' : '37px' : '37px' : location ? location.name === 'fromTechnology' ? '-117px' : '117px' : locationId ? locationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n    },\n    config: {\n      duration: 500\n    }\n  }); // Brush animation --------------\n\n  const brushimg = useSpring({\n    to: [{\n      right: location ? location.name === 'fromTechnology' ? '0%' : '0%' : '0%',\n      top: width <= 768 ? location ? location.name === 'fromTechnology' ? '37px' : '37px' : '37px' : location ? location.name === 'fromTechnology' ? '117px' : '117px' : '117px'\n    }],\n    from: {\n      right: location ? location.name === 'fromTechnology' ? '0%' : '50%' : '30%',\n      top: width <= 768 ? location ? location.name === 'fromTechnology' ? '37px' : '-37px' : '-80px' : location ? location.name === 'fromTechnology' ? '117px' : '-117px' : locationId ? locationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n    },\n    config: {\n      duration: 500\n    }\n  });\n  return {\n    brushimg,\n    gearimg,\n    leafimg,\n    container,\n    data,\n    myRef,\n    blog,\n    Course,\n    name,\n    executeScroll\n  };\n};\n\n_s(EnvironmentFunctions, \"W8ig97pZJZSUxjT5wPUSq/YhBXA=\", false, function () {\n  return [useSpring, useSpring, useSpring, useSpring];\n});\n\n_c = EnvironmentFunctions;\nexport default EnvironmentFunctions;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnvironmentFunctions\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/functions/environmentFunctions.js"],"names":["react","useState","useRef","useEffect","useSpring","GetDimension","scrollToRef","ref","window","scrollTo","current","offsetTop","EnvironmentFunctions","Alldata","location","locationId","innerWidth","width","console","log","myRef","executeScroll","screenSize","container","to","height","dynamicWidth","from","leafimg","top","left","id","name","config","duration","gearimg","brushimg","right","data","blog","Course"],"mappings":"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","sourcesContent":["import react, {useState,useRef, useEffect} from 'react'\nimport {useSpring,} from 'react-spring'\nimport GetDimension from './getDimension'\n\n\nconst scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop - 150)\nconst EnvironmentFunctions = (Alldata, location, locationId) =>{\nconst { innerWidth: width} = window;\nif(Alldata){\n\tconsole.log(true)\n}else{\n\tconsole.log(false)\n}\n  const myRef = useRef(null)\n\tconst executeScroll = () => scrollToRef(myRef)\n\t// let state = useSelector(state => state.allData)\n\n\t\n  // getDimension screen for responsive\n\n\tconst {screenSize} =GetDimension()\n\t\n\n\t\n\t\n  \t\t\n  // scroll \n\n\n  \n  // container height animation------------------\n\n\tconst container = useSpring({\n\t\tto: [{height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location?  \n\t\t'250px' : '300px' : screenSize.dynamicWidth < 480 ? location?\n\t\t'200px' : '200px' :'400px' }],\n\n\t\tfrom: {height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location?  \n\t\t'250px' : '400px' : screenSize.dynamicWidth < 480 ? location? \n\t\t'200px' : '400px' : location? '400px' : '550px'  }\n\t})\n\n\n\t\t// Leaf animation --------------\n\t\tconst leafimg = useSpring({\n\t\t\tto: [{top: '5%', left: '50%' }],\n\n\t\t\tfrom: \n      {top: locationId ? locationId.id ? '0%' : '0%' :\n\t\t\t  location ? location.name === name ? '0%' : '25%' : '25%',\n\n\t\t\tleft: \n        location ? location.name === 'fromTechnology'?\n        '0%' : location.name === name ? '41%' :  '0%' : \n        locationId ? locationId.id === 'fromNav-environment' ?\n        '41%' : '0%' : '30%' },\n\t\t\tconfig: {\n\t\t\t\tduration: 500\n\t\t\t}\n\t\t})\n\t\t// Gear animation --------------\n\n\t\tconst gearimg = useSpring({\n\t\tto: [{\n\t\t\tleft: '0%' ,\n\t\t\t\n\t\t\ttop: \n      width <= 768 ?  \n\t\t\tlocation ? '37px' : '37px' :\n      location ? '117px' : '117px'\n\t\t}],\n\n\n\t\t\tfrom:{\n        left: location ? \n        location.name === 'fromTechnology' ?\n        '50%' : '100%' :  '50%', \n\t\t\t\n\t\t\ttop: \n        width <= 768 ? location ?  \n        location.name === 'fromTechnology' ?\n        '-37px' : '37px' : '37px' : location ?  \n        location.name === 'fromTechnology' ?\n        '-117px' : '117px' :locationId ?  \n        locationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n\t\t\t },\n\t\t\tconfig: {\n\t\t\t\tduration: 500\n\t\t\t}\n\t\t})\n\n\t\t// Brush animation --------------\n\t\t\n\t\tconst brushimg = useSpring({\n\t\tto:[{right: \n          location ? location.name === 'fromTechnology' ?\n          '0%' : '0%' : '0%',\n\n        top: \n          width <= 768 ? location ? \n          location.name === 'fromTechnology' ? \n          '37px' : '37px' : '37px'   :    location ? \n          location.name === 'fromTechnology' ?\n          '117px' : '117px' : '117px'\n\t\t,\t\n\t\t}],\n  \tfrom:{right:\n            location ?\n            location.name === 'fromTechnology' ?\n            '0%' : '50%' : '30%',\n\t\t\t\n          top: \n            width <= 768 ? location ? \n            location.name === 'fromTechnology' ?  \n            '37px' : '-37px' : '-80px'  :  location ? \n            location.name === 'fromTechnology' ? \n            '117px' : '-117px' : locationId ?  \n              locationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n\t\t\t},\n\t\t\tconfig: {\n\t\t\t\tduration: 500\n\t\t\t}\n\t\t})\n  \n    return {\n      brushimg,\n      gearimg,\n      leafimg,\n      container,\n      data,\n      myRef,\n      blog,\n      Course,\n      name,\n      executeScroll\n    }\n\n\n}\n\nexport default EnvironmentFunctions\n"]},"metadata":{},"sourceType":"module"}