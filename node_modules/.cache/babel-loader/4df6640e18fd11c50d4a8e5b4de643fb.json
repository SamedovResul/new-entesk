{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport react, { useState, useEffect } from \"react\";\n\nconst GetDimension = () => {\n  _s();\n\n  const [screenSize, getDimension] = useState({\n    dynamicWidth: window.innerWidth,\n    dynamicHeight: window.innerHeight\n  });\n\n  const setDimension = () => {\n    getDimension({\n      dynamicWidth: window.innerWidth,\n      dynamicHeight: window.innerHeight\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', setDimension);\n    return () => {\n      window.removeEventListener('resize', setDimension);\n    };\n  }, [screenSize]); // console.log(screenSize)\n\n  return {\n    screenSize\n  };\n};\n\n_s(GetDimension, \"S02HmdLdIsMpanxW7YtCe90k2WI=\");\n\n_c = GetDimension;\nexport default GetDimension;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetDimension\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/functions/getDimension.js"],"names":["react","useState","useEffect","GetDimension","screenSize","getDimension","dynamicWidth","window","innerWidth","dynamicHeight","innerHeight","setDimension","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAG,MAAK;AAAA;;AAExB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BJ,QAAQ,CAAC;AAC1CK,IAAAA,YAAY,EAAEC,MAAM,CAACC,UADqB;AAE1CC,IAAAA,aAAa,EAAEF,MAAM,CAACG;AAFoB,GAAD,CAA3C;;AAKD,QAAMC,YAAY,GAAG,MAAM;AACxBN,IAAAA,YAAY,CAAC;AACXC,MAAAA,YAAY,EAAEC,MAAM,CAACC,UADV;AAEXC,MAAAA,aAAa,EAAEF,MAAM,CAACG;AAFX,KAAD,CAAZ;AAID,GALF;;AAOAR,EAAAA,SAAS,CAAC,MAAM;AACbK,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AAEA,WAAO,MAAM;AACTJ,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC;AACH,KAFD;AAGD,GANO,EAML,CAACP,UAAD,CANK,CAAT,CAdyB,CAqBxB;;AAEA,SAAO;AAACA,IAAAA;AAAD,GAAP;AACD,CAxBD;;GAAMD,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import react ,{ useState, useEffect } from \"react\";\n\nconst GetDimension = () =>{\n\n  const [screenSize, getDimension] = useState({\n    dynamicWidth: window.innerWidth,\n    dynamicHeight: window.innerHeight\n  });\n\n\tconst setDimension = () => {\n    getDimension({\n      dynamicWidth: window.innerWidth,\n      dynamicHeight: window.innerHeight\n    })\n  }\n\n\tuseEffect(() => {\n    window.addEventListener('resize', setDimension);\n    \n    return(() => {\n        window.removeEventListener('resize', setDimension);\n    })\n  }, [screenSize])\n  // console.log(screenSize)\n\n  return {screenSize}\n}\n\nexport default GetDimension"]},"metadata":{},"sourceType":"module"}