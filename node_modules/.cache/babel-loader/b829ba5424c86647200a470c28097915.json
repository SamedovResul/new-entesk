{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/teachers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreateTeacher, UpdateTeacher, GetTeacher } from '../../../../reducer/crmRedux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Classes = () => {\n  _s();\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    status: 0\n  });\n  const [id, setId] = useState({});\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.teacherReducer); // get teacher\n\n  useEffect(() => {\n    dispatch(GetTeacher());\n  }, []); // select update teacher\n\n  useEffect(() => {\n    state.map(classes => {\n      const {\n        _id\n      } = classes;\n\n      if (_id === id.id) {\n        setData(classes);\n      }\n    });\n  }, [id]); // create and update teacher\n\n  const createTeacher = e => {\n    if (id.id) {\n      dispatch(UpdateTeacher(id.id, data));\n      setData({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      });\n    } else {\n      dispatch(CreateTeacher(data));\n      setData({\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"create teacher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) // <div className='create-data'>\n  //   <p>create teacher</p>\n  //   {/* <form action=\"\">\n  //     <label htmlFor=\"name\">\n  //       name\n  //       <input type=\"name\" id=\"name\"\n  //       value={data.name}\n  //         onChange={(e) =>{\n  //           setData({\n  //             ...data, name: e.target.value\n  //           })\n  //         }}\n  //       />\n  //     </label>\n  //     <label htmlFor=\"email\">\n  //       email\n  //       <input type=\"email\" id=\"email\" \n  //         value={data.email}\n  //         onChange={(e) =>{\n  //           setData({\n  //             ...data, email:e.target.value\n  //           })\n  //         }}\n  //       />\n  //     </label>\n  //     <label htmlFor=\"password\">\n  //       password\n  //       <input type=\"password\" id=\"password\"\n  //         onChange={(e) =>{\n  //           setData({\n  //             ...data, password:e.target.value\n  //           })\n  //         }}\n  //           />\n  //     </label>\n  //     <label htmlFor=\"status\">\n  //       status\n  //       <select name=\"\" id=\"status\"\n  //         onChange={(e)=>{\n  //           setData({\n  //             ...data, status: parseInt(e.target.value) \n  //           })\n  //         }}\n  //       >\n  //         <option >select status</option>\n  //         <option value=\"0\">inactive</option>\n  //         <option value=\"1\">active</option>\n  //       </select>\n  //     </label>\n  //   </form> */}\n  //   {/* <button\n  //       onClick={() =>{\n  //         createTeacher()\n  //       }}\n  //     >\n  //       {\n  //         id.id ? (\n  //           <span>update</span> \n  //         ):(\n  //           <span>create</span> \n  //         )\n  //       }\n  //   </button> */}\n  //   {/* <div className=\"data\">\n  //     <ul>\n  //       {\n  //         state.map((clas, index) =>{\n  //           const {name, _id,email,status } =clas\n  //           return(\n  //             <div key={index}>\n  //               <button\n  //                 onClick={()=>{\n  //                   setId({id: _id})\n  //                 }}\n  //               >\n  //                 update\n  //               </button>\n  //               <li   value={_id} >\n  //               <span>status: {\n  //                   status === 1? ( <span>active</span> ) :( <span>inactive</span> )\n  //                 } \n  //               </span>\n  //               </li>\n  //               <li>\n  //               <span> name: {name} </span>\n  //               </li>\n  //             </div>\n  //           )\n  //         })\n  //       }\n  //     </ul>\n  //   </div> */}\n  // </div>\n  ;\n};\n\n_s(Classes, \"bb5nTIEFosjAm3ztS24V8UhuwyY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/teachers.js"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","CreateTeacher","UpdateTeacher","GetTeacher","Classes","data","setData","name","email","password","status","id","setId","dispatch","state","teacherReducer","map","classes","_id","createTeacher","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAsCC,UAAtC,QAAuD,qCAAvD;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BU,IAAAA,IAAI,EAAC,EAD0B;AAE/BC,IAAAA,KAAK,EAAC,EAFyB;AAG/BC,IAAAA,QAAQ,EAAC,EAHsB;AAI/BC,IAAAA,MAAM,EAAC;AAJwB,GAAD,CAAhC;AAMA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAMgB,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,KAAK,GAAGf,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,cAAlB,CAAzB,CAToB,CAWpB;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACV,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAZoB,CAkBtB;;AACEP,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,KAAK,CAACE,GAAN,CAAWC,OAAD,IAAY;AACpB,YAAM;AAACC,QAAAA;AAAD,UAAQD,OAAd;;AACA,UAAGC,GAAG,KAAKP,EAAE,CAACA,EAAd,EAAiB;AACfL,QAAAA,OAAO,CAACW,OAAD,CAAP;AACD;AACF,KALD;AAMD,GAPQ,EAON,CAACN,EAAD,CAPM,CAAT,CAnBoB,CA6BpB;;AACA,QAAMQ,aAAa,GAAIC,CAAD,IAAM;AAC1B,QAAGT,EAAE,CAACA,EAAN,EAAS;AACPE,MAAAA,QAAQ,CAACX,aAAa,CAACS,EAAE,CAACA,EAAJ,EAAON,IAAP,CAAd,CAAR;AACAC,MAAAA,OAAO,CAAC;AACNC,QAAAA,IAAI,EAAC,EADC;AAENC,QAAAA,KAAK,EAAC,EAFA;AAGNC,QAAAA,QAAQ,EAAC;AAHH,OAAD,CAAP;AAKD,KAPD,MAOK;AACHI,MAAAA,QAAQ,CAACZ,aAAa,CAACI,IAAD,CAAd,CAAR;AACAC,MAAAA,OAAO,CAAC;AACNC,QAAAA,IAAI,EAAC,EADC;AAENC,QAAAA,KAAK,EAAC,EAFA;AAGNC,QAAAA,QAAQ,EAAC;AAHH,OAAD,CAAP;AAKD;AACF,GAhBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,MAAM,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAgBE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AApHF;AAsHD,CAvKD;;GAAML,O;UAQaJ,W,EACHD,W;;;KATVK,O;AAyKN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { CreateTeacher, UpdateTeacher,GetTeacher} from '../../../../reducer/crmRedux/action';\n\nconst Classes = () => {\n  const [data, setData] = useState({\n    name:\"\",\n    email:\"\",\n    password:\"\",\n    status:0\n  })\n  const [id, setId] = useState({})\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.teacherReducer);\n\n  // get teacher\n  useEffect(() => {\n    dispatch(GetTeacher())\n  }, [])\n  \n\n    \n// select update teacher\n  useEffect(() => {\n    state.map((classes) =>{\n      const {_id} = classes\n      if(_id === id.id){\n        setData(classes)\n      }\n    })\n  }, [id])\n\n\n  // create and update teacher\n  const createTeacher = (e) =>{\n    if(id.id){\n      dispatch(UpdateTeacher(id.id,data))\n      setData({\n        name:\"\",\n        email:\"\",\n        password:\"\",\n      })\n    }else{\n      dispatch(CreateTeacher(data))\n      setData({\n        name:\"\",\n        email:\"\",\n        password:\"\",\n      })\n    }\n  }\n\n \n  return (\n    <div className=\"container\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"create-data\">\n              <p>create teacher</p>\n              <form action=\"\">\n                \n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    // <div className='create-data'>\n    //   <p>create teacher</p>\n\n    //   {/* <form action=\"\">\n    //     <label htmlFor=\"name\">\n    //       name\n    //       <input type=\"name\" id=\"name\"\n    //       value={data.name}\n    //         onChange={(e) =>{\n    //           setData({\n    //             ...data, name: e.target.value\n    //           })\n    //         }}\n    //       />\n    //     </label>\n    //     <label htmlFor=\"email\">\n    //       email\n    //       <input type=\"email\" id=\"email\" \n    //         value={data.email}\n    //         onChange={(e) =>{\n    //           setData({\n    //             ...data, email:e.target.value\n    //           })\n    //         }}\n    //       />\n    //     </label>\n    //     <label htmlFor=\"password\">\n    //       password\n    //       <input type=\"password\" id=\"password\"\n    //         onChange={(e) =>{\n    //           setData({\n    //             ...data, password:e.target.value\n    //           })\n    //         }}\n    //           />\n    //     </label>\n    //     <label htmlFor=\"status\">\n    //       status\n    //       <select name=\"\" id=\"status\"\n    //         onChange={(e)=>{\n    //           setData({\n    //             ...data, status: parseInt(e.target.value) \n    //           })\n    //         }}\n    //       >\n    //         <option >select status</option>\n    //         <option value=\"0\">inactive</option>\n    //         <option value=\"1\">active</option>\n    //       </select>\n    //     </label>\n        \n    //   </form> */}\n    //   {/* <button\n    //       onClick={() =>{\n    //         createTeacher()\n    //       }}\n    //     >\n    //       {\n    //         id.id ? (\n    //           <span>update</span> \n    //         ):(\n    //           <span>create</span> \n    //         )\n\n    //       }\n          \n    //   </button> */}\n      \n    //   {/* <div className=\"data\">\n\n    //     <ul>\n    //       {\n    //         state.map((clas, index) =>{\n    //           const {name, _id,email,status } =clas\n              \n    //           return(\n    //             <div key={index}>\n    //               <button\n    //                 onClick={()=>{\n    //                   setId({id: _id})\n    //                 }}\n    //               >\n    //                 update\n    //               </button>\n    //               <li   value={_id} >\n    //               <span>status: {\n    //                   status === 1? ( <span>active</span> ) :( <span>inactive</span> )\n    //                 } \n    //               </span>\n    //               </li>\n    //               <li>\n    //               <span> name: {name} </span>\n    //               </li>\n    //             </div>\n\n    //           )\n    //         })\n    //       }\n    //     </ul>\n    //   </div> */}\n    // </div>\n  )\n}\n\nexport default Classes"]},"metadata":{},"sourceType":"module"}