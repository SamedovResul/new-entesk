{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/studentsCV/CV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport Rellax from \"rellax\";\nimport './cv.css';\nimport { studentData } from './studentData';\nimport UserParams from './useParams';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cv = props => {\n  _s();\n\n  let boolean = true;\n  const rellaxRef = useRef();\n  let studentNamelocation;\n  const {\n    name,\n    setCertificates\n  } = UserParams(boolean);\n  useEffect(() => {\n    new Rellax(rellaxRef.current, {\n      speed: 4,\n      center: false,\n      wrapper: null,\n      round: true,\n      vertical: true,\n      horizontal: false\n    });\n  }, []);\n\n  const sendName = name => {\n    setCertificates(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: studentData.map((data, index) => {\n      const {\n        studentName,\n        resBackImg,\n        frontImg,\n        backImg\n      } = data; // setCertificates(studentName)\n\n      console.log(frontImg);\n\n      if (studentName === name) {\n        studentNamelocation = studentName;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"one\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: backImg,\n            alt: \"img\",\n            className: \"img1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: resBackImg,\n            alt: \"img\",\n            className: \"img2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"front rellax\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: frontImg,\n              alt: \"img\",\n              useref: rellaxRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map \",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/gallery\",\n              children: [\"Certificates\", /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n\n_s(Cv, \"nLcB/IWNV3VKzsxA0NhsxvhKUp0=\");\n\n_c = Cv;\nexport default Cv;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cv\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/studentsCV/CV.js"],"names":["React","useEffect","useRef","Rellax","studentData","UserParams","Link","Cv","props","boolean","rellaxRef","studentNamelocation","name","setCertificates","current","speed","center","wrapper","round","vertical","horizontal","sendName","map","data","index","studentName","resBackImg","frontImg","backImg","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,UAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AAEA,MAAMC,EAAE,GAAIC,KAAD,IAAW;AAAA;;AACpB,MAAIC,OAAO,GAAG,IAAd;AACA,QAAMC,SAAS,GAAGR,MAAM,EAAxB;AACA,MAAIS,mBAAJ;AACD,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAA0BR,UAAU,CAACI,OAAD,CAA1C;AAKCR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,MAAJ,CAAWO,SAAS,CAACI,OAArB,EAA8B;AAC5BC,MAAAA,KAAK,EAAE,CADqB;AAE5BC,MAAAA,MAAM,EAAE,KAFoB;AAG5BC,MAAAA,OAAO,EAAE,IAHmB;AAI5BC,MAAAA,KAAK,EAAE,IAJqB;AAK5BC,MAAAA,QAAQ,EAAE,IALkB;AAM5BC,MAAAA,UAAU,EAAE;AANgB,KAA9B;AAUD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMC,QAAQ,GAAIT,IAAD,IAAS;AACxBC,IAAAA,eAAe,CAACD,IAAD,CAAf;AACD,GAFD;;AAGA,sBACE;AAAA,cAEIR,WAAW,CAACkB,GAAZ,CAAgB,CAACC,IAAD,EAAMC,KAAN,KAAe;AAC7B,YAAM;AAACC,QAAAA,WAAD;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA,QAAzB;AAAkCC,QAAAA;AAAlC,UAA6CL,IAAnD,CAD6B,CAE7B;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,UAAGF,WAAW,KAAKb,IAAnB,EAAwB;AACtBD,QAAAA,mBAAmB,GAAGc,WAAtB;AACA,4BACE;AAAiB,UAAA,SAAS,EAAC,KAA3B;AAAA,kCACE;AAAM,YAAA,GAAG,EAAEG,OAAX;AAAoB,YAAA,GAAG,EAAC,KAAxB;AAA8B,YAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,GAAG,EAAEF,UAAV;AAAsB,YAAA,GAAG,EAAC,KAA1B;AAAgC,YAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEC,QAAV;AAAoB,cAAA,GAAG,EAAC,KAAxB;AAA8B,cAAA,MAAM,EAAEjB;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF,eAOE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,UAAT;AAAA,sDAEA;AAAA;AAAA;AAAA;AAAA,sBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,sBAHA,eAIA;AAAA;AAAA;AAAA;AAAA,sBAJA,eAKA;AAAA;AAAA;AAAA;AAAA,sBALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAAUc,KAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAoBD;AACF,KA5BD;AAFJ,mBADF;AAmCD,CA5DD;;GAAMjB,E;;KAAAA,E;AA8DN,eAAeA,EAAf","sourcesContent":["import React, {useEffect,useRef} from 'react';\nimport Rellax from \"rellax\";\nimport './cv.css'\nimport { studentData } from './studentData';\nimport UserParams from './useParams';\nimport { Link } from 'react-router-dom';\n\nconst Cv = (props) => {\n  let boolean = true\n  const rellaxRef = useRef();\n  let studentNamelocation\n const {name, setCertificates} = UserParams(boolean)\n\n \n \n\n  useEffect(() => {\n    new Rellax(rellaxRef.current, {\n      speed: 4,\n      center: false,\n      wrapper: null,\n      round: true,\n      vertical: true,\n      horizontal: false\n    });\n    \n    \n  }, []);\n\n  const sendName = (name) =>{\n    setCertificates(name)\n  }\n  return (\n    <>\n      {\n        studentData.map((data,index) =>{\n          const {studentName,resBackImg, frontImg,backImg} = data\n          // setCertificates(studentName)\n          console.log(frontImg)\n          \n          if(studentName === name){\n            studentNamelocation = studentName\n            return(\n              <div key={index} className=\"one\">\n                <img  src={backImg} alt=\"img\" className='img1' />\n                <img src={resBackImg} alt=\"img\" className='img2' />\n                <div className=\"front rellax\">\n                  <img src={frontImg} alt=\"img\" useref={rellaxRef} />\n                </div>\n\n                <div className=\"map \" >\n                  <Link to=\"/gallery\" >\n                    Certificates\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                  </Link>\n                </div>\n              </div>\n            )\n            \n          }\n        })\n      }\n    </>\n  );\n};\n\nexport default Cv;\n"]},"metadata":{},"sourceType":"module"}