{"ast":null,"code":"import axios from 'axios';\nconst url = 'http://localhost:5000/users';\nexport const fetchUsers = () => axios.get(url); // export const createPosts = (data,) => axios.post(url, {...data}, );\n\nexport const createPosts = data => {\n  const formdata = new FormData();\n  console.log(data);\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n\n  for (let i = 0; i < data.file.length; i++) {\n    formdata.append('files', data.file[i]);\n  }\n\n  formdata.append('blogName', data.blogName);\n  formdata.append('text', data.text);\n  formdata.append('title', data.title);\n  console.log(data);\n  return axios.post(url, formdata, config);\n};\nexport const updateUsers = (id, updateUser) => {\n  const config = {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  };\n  const formdata = new FormData();\n  formdata.append('blogName', updateUser.blogName);\n  formdata.append('text', updateUser.text);\n  formdata.append('title', updateUser.title);\n  console.log(updateUser);\n\n  for (let i = 0; i < updateUser.file.length; i++) {\n    formdata.append('files', updateUser.file[i]);\n  }\n\n  let postData;\n\n  for (let i = 0; i < updateUser.file.length; i++) {\n    postData = JSON.stringify(updateUser.file[i]);\n    formdata.append('file', postData);\n  }\n\n  console.log(formdata.get('file'));\n  return axios.patch(`${url}/${id}`, formdata, config);\n};\nexport const deleteBlogs = id => axios.delete(`${url}/${id}`);","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/reducer/api.js"],"names":["axios","url","fetchUsers","get","createPosts","data","formdata","FormData","console","log","config","headers","i","file","length","append","blogName","text","title","post","updateUsers","id","updateUser","postData","JSON","stringify","patch","deleteBlogs","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAG,6BAAZ;AAOA,OAAO,MAAMC,UAAU,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAUF,GAAV,CAAzB,C,CACP;;AACA,OAAO,MAAMG,WAAW,GAAIC,IAAD,IAAS;AAClC,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAMK,MAAM,GAAG;AACfC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADM,GAAf;;AAOA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,IAAI,CAACQ,IAAL,CAAUC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAEzCN,IAAAA,QAAQ,CAACS,MAAT,CAAgB,OAAhB,EAAyBV,IAAI,CAACQ,IAAL,CAAUD,CAAV,CAAzB;AACD;;AAEHN,EAAAA,QAAQ,CAACS,MAAT,CAAgB,UAAhB,EAA4BV,IAAI,CAACW,QAAjC;AACAV,EAAAA,QAAQ,CAACS,MAAT,CAAgB,MAAhB,EAAwBV,IAAI,CAACY,IAA7B;AACAX,EAAAA,QAAQ,CAACS,MAAT,CAAgB,OAAhB,EAAyBV,IAAI,CAACa,KAA9B;AACEV,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAGA,SAAOL,KAAK,CAACmB,IAAN,CAAWlB,GAAX,EAAeK,QAAf,EAAwBI,MAAxB,CAAP;AAGH,CAxBM;AA2BP,OAAO,MAAMU,WAAW,GAAG,CAACC,EAAD,EAAKC,UAAL,KAAoB;AAE3C,QAAMZ,MAAM,GAAG;AACfC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADM,GAAf;AAMA,QAAML,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,EAAAA,QAAQ,CAACS,MAAT,CAAgB,UAAhB,EAA4BO,UAAU,CAACN,QAAvC;AACAV,EAAAA,QAAQ,CAACS,MAAT,CAAgB,MAAhB,EAAwBO,UAAU,CAACL,IAAnC;AACAX,EAAAA,QAAQ,CAACS,MAAT,CAAgB,OAAhB,EAAyBO,UAAU,CAACJ,KAApC;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYa,UAAZ;;AACA,OAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,UAAU,CAACT,IAAX,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;AAC/CN,IAAAA,QAAQ,CAACS,MAAT,CAAgB,OAAhB,EAAyBO,UAAU,CAACT,IAAX,CAAgBD,CAAhB,CAAzB;AACD;;AACD,MAAIW,QAAJ;;AAEA,OAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,UAAU,CAACT,IAAX,CAAgBC,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;AAC/CW,IAAAA,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAeH,UAAU,CAACT,IAAX,CAAgBD,CAAhB,CAAf,CAAX;AACAN,IAAAA,QAAQ,CAACS,MAAT,CAAgB,MAAhB,EAAyBQ,QAAzB;AACD;;AAGDf,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACH,GAAT,CAAa,MAAb,CAAZ;AACA,SAAOH,KAAK,CAAC0B,KAAN,CAAa,GAAEzB,GAAI,IAAGoB,EAAG,EAAzB,EAA4Bf,QAA5B,EAAsCI,MAAtC,CAAP;AACH,CA3BM;AA6BP,OAAO,MAAMiB,WAAW,GAAIN,EAAD,IAAQrB,KAAK,CAAC4B,MAAN,CAAc,GAAE3B,GAAI,IAAGoB,EAAG,EAA1B,CAA5B","sourcesContent":["import axios from 'axios'\n\nconst url = 'http://localhost:5000/users';\n\n\n\n\n\n\nexport const fetchUsers = () => axios.get(url)\n// export const createPosts = (data,) => axios.post(url, {...data}, );\nexport const createPosts = (data) =>{\n  const formdata = new FormData()\n    console.log(data)\n    const config = {\n    headers: {\n        'content-type': 'multipart/form-data'\n    }\n    }\n\n\n    for (let i = 0; i < data.file.length; i++) {\n      \n      formdata.append('files', data.file[i])\n    }\n  \n  formdata.append('blogName', data.blogName)\n  formdata.append('text', data.text)\n  formdata.append('title', data.title)\n    console.log(data)\n\n\n    return axios.post(url,formdata,config )\n    \n    \n}\n\n\nexport const updateUsers = (id, updateUser) => {\n\n    const config = {\n    headers: {\n        'content-type': 'multipart/form-data'\n    }\n    }\n\n    const formdata = new FormData()\n\n    formdata.append('blogName', updateUser.blogName)\n    formdata.append('text', updateUser.text)\n    formdata.append('title', updateUser.title)\n    console.log(updateUser)\n    for (let i = 0; i < updateUser.file.length; i++) {\n      formdata.append('files', updateUser.file[i])\n    }\n    let postData \n\n    for (let i = 0; i < updateUser.file.length; i++) {\n      postData = JSON.stringify(updateUser.file[i]);\n      formdata.append('file',  postData)\n    }\n      \n    \n    console.log(formdata.get('file'))\n    return axios.patch(`${url}/${id}`, formdata, config);\n}\n\nexport const deleteBlogs = (id) => axios.delete(`${url}/${id}`)\n\n\n\n     \n"]},"metadata":{},"sourceType":"module"}