{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/blogfolder/blogUpdate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction BlogUpdate(_ref) {\n  let {\n    userData,\n    currentId,\n    handleUpdateimg,\n    img1,\n    img2\n  } = _ref;\n  console.log(img1);\n  console.log(img2);\n  const {\n    _id,\n    name,\n    file,\n    text,\n    title\n  } = userData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userData._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"updateBlog\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"updateText\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"title\",\n              children: [\"title: \", title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"blogName\",\n              children: [\"name: \", name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text\",\n              children: [\"text: \", text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"updateimgDiv\",\n            children: userData.file.map((image, index) => {\n              const {\n                filepath\n              } = image; // console.log(image)\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"updateImage\",\n                children: filepath ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [currentId === _id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleUpdateimg(filepath),\n                    children: \"remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 32\n                  }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"\",\n                    src: `http://localhost:5000/${filepath}`,\n                    alt: \"img\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true) : null\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), img1 > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"updateimgDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"updateImage\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img1,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this) : img2 && img1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"updateimgDiv\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"updateImage\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: img1,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img2,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BlogUpdate;\nexport default BlogUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogUpdate\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/blogfolder/blogUpdate.js"],"names":["React","BlogUpdate","userData","currentId","handleUpdateimg","img1","img2","console","log","_id","name","file","text","title","map","image","index","filepath"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nfunction BlogUpdate({\n  userData,\n  currentId,\n  handleUpdateimg,\n  img1,\n  img2\n  }) {\n\n    console.log(img1)\n    console.log(img2)\n    const {_id, name, file, text,title} = userData\n\n  return (  \n    <div>\n      \n      {  \n      userData._id ? (\n        <>\n          <div className=\"col-md-12\" key={_id}>\n            <div className=\"updateBlog\" >\n              <div className=\"updateText\">\n                <p className=\"title\">title: {title} </p>\n                <p className=\"blogName\">name: {name}</p>\n                <p className=\"text\">text: {text}</p>\n              </div>\n              <div className=\"updateimgDiv\">\n                {\n                  userData.file.map((image, index)=>{\n                    const {filepath} = image\n                    // console.log(image)\n                    return(\n                      <div className='updateImage'  key={index}>\n                        {\n                          filepath? (\n                            <>\n                            { \n                              currentId === _id ?\n                              (<button onClick={() =>handleUpdateimg(filepath)}>remove</button>) :\n                              (null)\n                            }\n                              <img className=\"\" \n                              src={`http://localhost:5000/${filepath}`} \n                              alt=\"img\"\n                              />\n                            </>\n                          ):\n                          (\n                            null\n                          )\n                          \n                        }\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              {\n                \n                img1 > 0 ? (\n                  <div className=\"updateimgDiv\">\n                    <div className='updateImage'>\n                      <img src={img1} alt=\"\" />\n                    </div>\n                  </div>\n                ): img2 && img1 ?(\n                  <div className=\"updateimgDiv\">\n                    <div className='updateImage'>\n                      <img src={img1} alt=\"\" />\n                      <img src={img2} alt=\"\" />\n                    </div>\n                  </div>\n                ):(\n                  null\n                )\n              }\n            </div>\n          </div>\n        </>\n      ):(\n        <b>Wait...</b>\n      )\n        }\n    </div>\n  )\n}\n\nexport default BlogUpdate\n"]},"metadata":{},"sourceType":"module"}