{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/classes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreateClass, UpdateClass, GetClass, DeleteClass } from '../../../../reducer/crmRedux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Classes = () => {\n  _s();\n\n  const [data, setData] = useState({\n    name: \"\",\n    content: \"\"\n  });\n  const [id, setId] = useState({});\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.classReducer); // get classes\n\n  useEffect(() => {\n    dispatch(GetClass());\n  }, []); // select update classes\n\n  useEffect(() => {\n    state.map(classes => {\n      const {\n        _id\n      } = classes;\n\n      if (_id === id.id) {\n        setData(classes);\n      }\n    });\n  }, [id]); // create delete class\n\n  const createClass = e => {\n    if (id.id) {\n      dispatch(UpdateClass(id.id, data));\n      setData({\n        name: \"\",\n        content: \"\"\n      });\n    } else {\n      dispatch(CreateClass(data));\n      setData({\n        name: \"\",\n        content: \"\"\n      });\n    }\n  };\n\n  const deleteClass = id => {\n    console.log(id);\n    dispatch(DeleteClass(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" create-admin create-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"class name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: data.name,\n              onChange: e => {\n                setData({ ...data,\n                  name: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"content\",\n              value: data.content,\n              onChange: e => {\n                setData({ ...data,\n                  content: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              createClass();\n            },\n            children: id.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), state.map((clas, index) => {\n      const {\n        name,\n        _id,\n        content\n      } = clas;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Class Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this), \" \", name, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Title Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), \" \", content, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setId({\n                id: _id\n              });\n            },\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }, this)\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Classes, \"MrjiT9T4fp8V3vbppaBeo5RZ1TE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/classes.js"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","CreateClass","UpdateClass","GetClass","DeleteClass","Classes","data","setData","name","content","id","setId","dispatch","state","classReducer","map","classes","_id","createClass","e","deleteClass","console","log","target","value","clas","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { \n  CreateClass, \n  UpdateClass,\n  GetClass,\n  DeleteClass\n} from '../../../../reducer/crmRedux/action';\n\nconst Classes = () => {\n  const [data, setData] = useState({\n    name:\"\",\n    content:\"\",\n  })\n  const [id, setId] = useState({})\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.classReducer);\n    \n    // get classes\n  useEffect(() => {\n    dispatch(GetClass())\n  }, [])\n  \n\n    \n  // select update classes\n  useEffect(() => {\n    state.map((classes) =>{\n      const {_id} = classes\n      if(_id === id.id){\n        setData(classes)\n      }\n    })\n  }, [id])\n\n    // create delete class\n  const createClass = (e) =>{\n    if(id.id){\n      dispatch(UpdateClass(id.id,data))\n      setData({\n        name:\"\",\n        content:\"\",\n      })\n    }else{\n      dispatch(CreateClass(data))\n      setData({\n        name:\"\",\n        content:\"\",\n      })\n    }\n  }\n\n  const deleteClass =(id) =>{\n    console.log(id)\n    dispatch(DeleteClass(id))\n  }\n  return (\n      <>\n          <div className=\"col-md-12\">\n            <div className=\" create-admin create-class\">\n              <h1>Create class</h1>\n              <form action=\"\">\n                <label htmlFor=\"name\">\n                  <b>class name: </b>\n                  <input type=\"text\" id=\"name\"\n                  value={data.name}\n                    onChange={(e) =>{\n                      setData({\n                        ...data, name: e.target.value\n                      })\n                    }}\n                  />\n                </label>\n                <label htmlFor=\"content\">\n                  <b>Title: </b>\n                  <input type=\"text\" id=\"content\" \n                    value={data.content}\n                    onChange={(e) =>{\n                      setData({\n                        ...data, content:e.target.value\n                      })\n                    }}\n                  />\n                </label>\n                <button onClick={() =>{createClass()}}>\n                    {\n                      id.id ? (\n                        <span>update</span> \n                      ):(\n                        <span>create</span> \n                      )\n\n                    }\n                </button>\n              </form>\n            </div>\n          </div>\n\n          {\n            state.map((clas, index) =>{\n              const {name, _id,content} =clas\n\n              return(\n                <div key={_id} className=\"col-md-4\">\n                  <div className=\"info-table\">\n                    <p> <b>Class Name:</b> {name}  </p>\n                    <p> <b>Title Name:</b> {content}  </p>\n                    <button\n                      onClick={()=>{setId({id: _id}) }} >\n                      update\n                    </button>\n                  </div>\n                </div>\n              )\n            })\n          }\n      </>\n  )\n}\n\nexport default Classes"]},"metadata":{},"sourceType":"module"}