{"ast":null,"code":"import react, { useState, useRef, useEffect } from 'react';\n\nconst environmentFunctions = (Alldata, props) => {\n  console.log(Alldata);\n  console.log(props); // const myRef = useRef(null)\n  // const executeScroll = () => scrollToRef(myRef)\n  // // let state = useSelector(state => state.allData)\n  // const [screenSize, getDimension] = useState({\n  //   dynamicWidth: window.innerWidth,\n  //   dynamicHeight: window.innerHeight\n  // });\n  // const setDimension = () => {\n  //   getDimension({\n  //     dynamicWidth: window.innerWidth,\n  //     dynamicHeight: window.innerHeight\n  //   })\n  // }\n  // useEffect(() => {\n  //   window.addEventListener('resize', setDimension);\n  //   return(() => {\n  //       window.removeEventListener('resize', setDimension);\n  //   })\n  // }, [screenSize])\n  // let location = props.location.aboutProps\n  // const locationId =  props.location.aboutId\n  // const { innerWidth: width} = window;\n  // let name\n  // let data \n  // let Course = Alldata.Course\n  // let blog = Alldata.blog\n  // if(location && location.name !== 'fromSkill' && location.name !== 'fromTechnology'){\n  // \tconst Course = Alldata.Course\n  // \t\tCourse.map((subject, index) => {\n  // \t\t\tif(subject.name === location.name ){\n  // \t\t\t\tdata = subject\n  // \t\t\t\tname = subject.name\n  // \t\t\t}\n  // \t\t\treturn data\n  // \t})\t\n  // }else{\n  // \tconst Course = Alldata.Environment\n  // \tCourse.map((subject, index) => {\n  // \t\t\t\tdata = subject\n  // \t\t\t\tname = subject.name\n  // \t\t\treturn subject\n  // \t})\n  // }\n  // // console.log( locationId )\n  // useEffect(() => {\n  // window.scrollTo(0, 0);\n  // }, [location, name,] );\n  // const container = useSpring({\n  // \tto: [{height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location?  \n  // \t'250px' : '300px' : screenSize.dynamicWidth < 480 ? location?\n  // \t'200px' : '200px' :'400px' }],\n  // \tfrom: {height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location?  \n  // \t'250px' : '400px' : screenSize.dynamicWidth < 480 ? location? \n  // \t'200px' : '400px' : location? '400px' : '550px'  }\n  // })\n  // \t// Leaf animation --------------\n  // \t// console.log(props)\n  // \tconst leafimg = useSpring({\n  // \t\tto: [{top: '5%', left: '50%' }],\n  // \t\tfrom: {top: locationId ? locationId.id ? '0%' : '0%' :\n  // \t\t location ? location.name === name ? '0%' : '25%' : '25%',\n  // \t\tleft: location ? location.name === 'fromTechnology'?\n  // \t\t'0%' : location.name === name ? '41%' :  '0%' : locationId\n  // \t\t? locationId.id === 'fromNav-environment' ?\n  // \t\t'41%' : '0%' : '30%' },\n  // \t\tconfig: {\n  // \t\t\tduration: 500\n  // \t\t}\n  // \t})\n  // \t// Leafsize animation --------------\n  // \t// Gear animation --------------\n  // \tconst gearimg = useSpring({\n  // \tto: [{\n  // \t\tleft: '0%' ,\n  // \t\ttop: width <= 768 ?  \n  // \t\tlocation ? '37px' : '37px' :  location ? \n  // \t\t'117px' : '117px'\n  // \t}],\n  // \t\tfrom: {left: location ? \n  // \t\tlocation.name === 'fromTechnology' ?\n  // \t\t'50%' : '100%' :  '50%', \n  // \t\ttop: width <= 768 ? location ?  \n  // \t\tlocation.name === 'fromTechnology' ?\n  // \t\t '-37px' : '37px' : '37px' : location ?  \n  // \t\t location.name === 'fromTechnology' ?\n  // \t\t'-117px' : '117px' :locationId ?  \n  // \t\t\tlocationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n  // \t\t },\n  // \t\tconfig: {\n  // \t\t\tduration: 500\n  // \t\t}\n  // \t})\n  // \t// Brush animation --------------\n  // \tconst brushimg = useSpring({\n  // \tto: [{right: location ?\n  // \t\tlocation.name === 'fromTechnology' ?\n  // \t\t'0%' : '0%' : '0%',\n  // \t\ttop: width <= 768 ? location ? \n  // \t\tlocation.name === 'fromTechnology' ? \n  // \t\t'37px' : '37px' : '37px'   :    location ? \n  // \t\tlocation.name === 'fromTechnology' ?\n  // \t\t'117px' : '117px' : '117px'\n  // \t,\t\n  // \t}],\n  // \t\tfrom: {right: location ?\n  // \t\tlocation.name === 'fromTechnology' ?\n  // \t\t'0%' : '50%' : '30%',\n  // \t\ttop: width <= 768 ? location ? \n  // \t\tlocation.name === 'fromTechnology' ?  \n  // \t\t'37px' : '-37px' : '-80px'  :  location ? \n  // \t\tlocation.name === 'fromTechnology' ? \n  // \t\t'117px' : '-117px' : locationId ?  \n  // \t\t\tlocationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n  // \t\t},\n  // \t\tconfig: {\n  // \t\t\tduration: 500\n  // \t\t}\n  // \t})\n\n  return {};\n};\n\nexport default environmentFunctions;","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/functions/environmentFunctions.js"],"names":["react","useState","useRef","useEffect","environmentFunctions","Alldata","props","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,MAAxB,EAAgCC,SAAhC,QAAgD,OAAhD;;AAIA,MAAMC,oBAAoB,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAmB;AAE9CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAH8C,CAK9C;AACD;AACA;AAIA;AACC;AACA;AACA;AAED;AACC;AACA;AACA;AACA;AACA;AAED;AACC;AAEA;AACA;AACA;AACA;AAGD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIG,SAAO,EAAP;AAGH,CAtKD;;AAwKA,eAAeF,oBAAf","sourcesContent":["import react, {useState,useRef, useEffect} from 'react'\n\n\n\nconst environmentFunctions = (Alldata, props) =>{\n\n  console.log(Alldata)\n  console.log(props)\n\n  // const myRef = useRef(null)\n\t// const executeScroll = () => scrollToRef(myRef)\n\t// // let state = useSelector(state => state.allData)\n\n\t\n\n\t// const [screenSize, getDimension] = useState({\n  //   dynamicWidth: window.innerWidth,\n  //   dynamicHeight: window.innerHeight\n  // });\n\n\t// const setDimension = () => {\n  //   getDimension({\n  //     dynamicWidth: window.innerWidth,\n  //     dynamicHeight: window.innerHeight\n  //   })\n  // }\n\n\t// useEffect(() => {\n  //   window.addEventListener('resize', setDimension);\n    \n  //   return(() => {\n  //       window.removeEventListener('resize', setDimension);\n  //   })\n  // }, [screenSize])\n\n\n\t// let location = props.location.aboutProps\n\t// const locationId =  props.location.aboutId\n\t// const { innerWidth: width} = window;\n\n\t// let name\n\t// let data \n\t// let Course = Alldata.Course\n\t// let blog = Alldata.blog\n\t// if(location && location.name !== 'fromSkill' && location.name !== 'fromTechnology'){\n\t// \tconst Course = Alldata.Course\n\t// \t\tCourse.map((subject, index) => {\n\t// \t\t\tif(subject.name === location.name ){\n\t// \t\t\t\tdata = subject\n\t// \t\t\t\tname = subject.name\n\t// \t\t\t}\n\n\t// \t\t\treturn data\n\t// \t})\t\n\t// }else{\n\t// \tconst Course = Alldata.Environment\n\t// \tCourse.map((subject, index) => {\n\t\t\t\t\n\t// \t\t\t\tdata = subject\n\t// \t\t\t\tname = subject.name\n\t// \t\t\treturn subject\n\t// \t})\n\t// }\n  \t\t\n\n\n\t// // console.log( locationId )\n\t// useEffect(() => {\n\t\n\t// window.scrollTo(0, 0);\n\t\t\n\t// }, [location, name,] );\n\n\t// const container = useSpring({\n\t// \tto: [{height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location?  \n\t// \t'250px' : '300px' : screenSize.dynamicWidth < 480 ? location?\n\t// \t'200px' : '200px' :'400px' }],\n\n\t// \tfrom: {height: screenSize.dynamicWidth <= 768 && screenSize.dynamicWidth > 480 ? location?  \n\t// \t'250px' : '400px' : screenSize.dynamicWidth < 480 ? location? \n\t// \t'200px' : '400px' : location? '400px' : '550px'  }\n\t// })\n\n\n\t// \t// Leaf animation --------------\n\t// \t// console.log(props)\n\t// \tconst leafimg = useSpring({\n\t// \t\tto: [{top: '5%', left: '50%' }],\n\n\n\t// \t\tfrom: {top: locationId ? locationId.id ? '0%' : '0%' :\n\t// \t\t location ? location.name === name ? '0%' : '25%' : '25%',\n\n\n\t// \t\tleft: location ? location.name === 'fromTechnology'?\n\t// \t\t'0%' : location.name === name ? '41%' :  '0%' : locationId\n\t// \t\t? locationId.id === 'fromNav-environment' ?\n\t// \t\t'41%' : '0%' : '30%' },\n\t// \t\tconfig: {\n\t// \t\t\tduration: 500\n\t// \t\t}\n\t// \t})\n\n\t// \t// Leafsize animation --------------\n\n\n\t// \t// Gear animation --------------\n\n\t// \tconst gearimg = useSpring({\n\t// \tto: [{\n\t// \t\tleft: '0%' ,\n\t\t\t\n\t// \t\ttop: width <= 768 ?  \n\t// \t\tlocation ? '37px' : '37px' :  location ? \n\t// \t\t'117px' : '117px'\n\t\n\t// \t}],\n\n\n\t// \t\tfrom: {left: location ? \n\t// \t\tlocation.name === 'fromTechnology' ?\n\t// \t\t'50%' : '100%' :  '50%', \n\t\t\t\n\t// \t\ttop: width <= 768 ? location ?  \n\t// \t\tlocation.name === 'fromTechnology' ?\n\t// \t\t '-37px' : '37px' : '37px' : location ?  \n\t// \t\t location.name === 'fromTechnology' ?\n\t// \t\t'-117px' : '117px' :locationId ?  \n\t// \t\t\tlocationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n\t// \t\t },\n\t// \t\tconfig: {\n\t// \t\t\tduration: 500\n\t// \t\t}\n\t// \t})\n\n\t// \t// Brush animation --------------\n\t\t\n\t// \tconst brushimg = useSpring({\n\t// \tto: [{right: location ?\n\t// \t\tlocation.name === 'fromTechnology' ?\n\t// \t\t'0%' : '0%' : '0%',\n\n\t// \t\ttop: width <= 768 ? location ? \n\t// \t\tlocation.name === 'fromTechnology' ? \n\t// \t\t'37px' : '37px' : '37px'   :    location ? \n\t// \t\tlocation.name === 'fromTechnology' ?\n\t// \t\t'117px' : '117px' : '117px'\n\t// \t,\t\n\t// \t}],\n  // \t\tfrom: {right: location ?\n\t// \t\tlocation.name === 'fromTechnology' ?\n\t// \t\t'0%' : '50%' : '30%',\n\t\t\t\n\t// \t\ttop: width <= 768 ? location ? \n\t// \t\tlocation.name === 'fromTechnology' ?  \n\t// \t\t'37px' : '-37px' : '-80px'  :  location ? \n\t// \t\tlocation.name === 'fromTechnology' ? \n\t// \t\t'117px' : '-117px' : locationId ?  \n\t// \t\t\tlocationId.id === 'fromNav-technology' ? '-80px' : '-80px' : '117px'\n\t// \t\t},\n\t// \t\tconfig: {\n\t// \t\t\tduration: 500\n\t// \t\t}\n\t// \t})\n  \n\n    \n    return {}\n\n\n}\n\nexport default environmentFunctions\n"]},"metadata":{},"sourceType":"module"}