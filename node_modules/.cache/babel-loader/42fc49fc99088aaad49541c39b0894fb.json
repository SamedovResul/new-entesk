{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreateStudent, UpdateStudent, GetStudent } from '../../../../reducer/crmRedux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Classes = () => {\n  _s();\n\n  const [data, setData] = useState({\n    firstName: \"\",\n    secondName: \"\",\n    age: 0,\n    status: 0\n  });\n  const [id, setId] = useState({});\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.studentReducer);\n  console.log(data); // get student\n\n  useEffect(() => {\n    dispatch(GetStudent());\n  }, []); // select update student\n\n  useEffect(() => {\n    state.map(classes => {\n      const {\n        _id\n      } = classes;\n\n      if (_id === id.id) {\n        setData(classes);\n      }\n    });\n  }, [id]); // create and update student\n\n  const createClass = e => {\n    if (id.id) {\n      dispatch(UpdateStudent(id.id, data));\n      console.log(true);\n    } else {\n      dispatch(CreateStudent(data));\n      console.log(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"create Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"firstName\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          id: \"name\",\n          value: data.firstName,\n          onChange: e => {\n            setData({ ...data,\n              firstName: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"secondName\",\n        children: [\"secondName\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"secondName\",\n          id: \"secondName\",\n          value: data.secondName,\n          onChange: e => {\n            setData({ ...data,\n              secondName: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"number\",\n        children: [\"age\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"password\",\n          onChange: e => {\n            setData({ ...data,\n              age: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"status\",\n          onChange: e => {\n            setData({ ...data,\n              status: parseInt(e.target.value)\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        createClass();\n      },\n      children: id.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: state.map((student, index) => {\n          const {\n            firstName,\n            secondName,\n            age,\n            status,\n            _id\n          } = student;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setId({\n                  id: _id\n                });\n              },\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              value: _id,\n              children: [\"firstName \", firstName]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: secondName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Classes, \"iRgO+bNHf0mAXT8tJ8jGEwSvbaI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/students.js"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","CreateStudent","UpdateStudent","GetStudent","Classes","data","setData","firstName","secondName","age","status","id","setId","dispatch","state","studentReducer","console","log","map","classes","_id","createClass","e","target","value","parseInt","student","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { CreateStudent, UpdateStudent,GetStudent} from '../../../../reducer/crmRedux/action';\n\nconst Classes = () => {\n  const [data, setData] = useState({\n    firstName:\"\",\n    secondName:\"\",\n    age:0,\n    status:0\n  })\n  const [id, setId] = useState({})\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.studentReducer);\n  console.log(data)\n  // get student\n  useEffect(() => {\n    dispatch(GetStudent())\n  }, [])\n  \n    \n// select update student\n  useEffect(() => {\n    state.map((classes) =>{\n      const {_id} = classes\n      if(_id === id.id){\n        setData(classes)\n      }\n    })\n  }, [id])\n\n\n  // create and update student\n  const createClass = (e) =>{\n    if(id.id){\n      dispatch(UpdateStudent(id.id,data))\n      console.log(true)\n    }else{\n      dispatch(CreateStudent(data))\n      console.log(false)\n    }\n  }\n\n \n  return (\n    <div className='create-data'>\n      <p>create Student</p>\n      <form action=\"\">\n        <label htmlFor=\"name\">\n          firstName\n          <input type=\"name\" id=\"name\"\n          value={data.firstName}\n            onChange={(e) =>{\n              setData({\n                ...data, firstName: e.target.value\n              })\n            }}\n          />\n        </label>\n        <label htmlFor=\"secondName\">\n          secondName\n          <input type=\"secondName\" id=\"secondName\" \n            value={data.secondName}\n            onChange={(e) =>{\n              setData({\n                ...data, secondName:e.target.value\n              })\n            }}\n          />\n        </label>\n        <label htmlFor=\"number\">\n          age\n          <input type=\"number\" id=\"password\"\n            onChange={(e) =>{\n              setData({\n                ...data, age:e.target.value\n              })\n            }}\n              />\n        </label>\n        <label htmlFor=\"status\">\n          status\n          <select name=\"\" id=\"status\"\n            onChange={(e)=>{\n              setData({\n                ...data, status: parseInt(e.target.value) \n              })\n            }}\n          >\n            <option >select status</option>\n            <option value=\"0\">inactive</option>\n            <option value=\"1\">active</option>\n          </select>\n        </label>\n        \n      </form>\n      <button\n          onClick={() =>{\n            createClass()\n          }}\n        >\n          {\n            id.id ? (\n              <span>update</span> \n            ):(\n              <span>create</span> \n            )\n\n          }\n          \n      </button>\n      \n      <div className=\"data\">\n\n        <ul>\n          {\n            state.map((student, index) =>{\n              const {\n              firstName,\n              secondName,\n              age,\n              status,\n              _id\n            } = student\n              \n              return(\n                <div key={index}>\n                  <button\n                    onClick={()=>{\n                      setId({id: _id})\n                    }}\n                  >\n                    update\n                  </button>\n                  <li  key={index} value={_id} >\n                  firstName {firstName} \n                  {/* <span>status {\n                      status === 1? ( <p>active</p> ) :( <p>inactive</p> )\n                    } \n                  </span> */}\n                  </li>\n                  <li>\n                    {secondName}\n                  </li>\n                  <li>\n                    {age}\n                  </li>\n                </div>\n\n              )\n            })\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Classes"]},"metadata":{},"sourceType":"module"}