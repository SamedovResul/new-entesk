{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUser, updateUser, deleteBlog } from '../../../reducer/blogReducer/action';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nfunction AdminFunctions() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  let state = useSelector(state => state.blogs);\n  const [currentId, setCurrentId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [count, setCount] = useState(0);\n  const [slideimg, setSlideimg] = useState(\"\");\n  const [objectUrl, setObjectUrl] = useState([]);\n  const [img1, setImg1] = useState([]);\n  const [img2, setImg2] = useState([]);\n  const dispatch = useDispatch();\n  const [blogData, setBlogdata] = useState({\n    title: '',\n    text: '',\n    name: '',\n    file: []\n  });\n  const update = useSelector(state => id ? state.allData.find(blog => blog._id === id) : null); // function imgView(img) {\n  //   if(img.type){\n  //     const reader = new FileReader();\n  //     reader.onload = () =>{\n  //       if(reader.readyState === 2){\n  //         setObjectUrl(reader.result)\n  //       }\n  //     }\n  //   reader.readAsDataURL(img)\n  //   }\n  // }\n  // useEffect(() => { \n  //     if(userData.file.length === 1){ \n  //       imgView(userData.file[0])\n  //       setImg1( objectUrl)\n  //     }else if(userData.file.length === 2){\n  //       imgView(userData.file[1])\n  //       setImg2( objectUrl)\n  //     }\n  //     // console.log(objectUrl)\n  // }, [userData.file,objectUrl ]) \n\n  useEffect(() => {\n    if (update) {\n      setBlogdata(update);\n      setCurrentId(id);\n    }\n  }, [update]);\n\n  function handleUpdateimg(filepath) {\n    const itemToRemoveIndex = blogData.file.findIndex(function (item) {\n      return item.filepath === filepath;\n    });\n    setCount(count + 1);\n    blogData.file.splice(itemToRemoveIndex, 1);\n    return;\n  }\n\n  let Itemindex = false;\n  Itemindex = blogData.file.filter(img => img.name === slideimg); // console.log(Itemindex)\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (slideimg) {\n      if (slideimg !== blogData.file[0].name) {\n        blogData.file.splice(0, 0, Itemindex[0]);\n        blogData.file.pop();\n      }\n    }\n\n    console.log(blogData.file);\n    console.log(id);\n\n    if (currentId === 0) {\n      if (blogData.title && blogData.text && blogData.name && blogData.file) {\n        blogData.blogName = blogData.name.replace(/[^a-zA-Z ]/g, \"\");\n        dispatch(createUser(blogData));\n        setBlogdata({\n          title: '',\n          text: '',\n          blogName: '',\n          file: []\n        });\n      } else {\n        alert(\"please insert data\");\n      }\n    } else {\n      dispatch(updateUser(currentId, blogData));\n      setCurrentId(0);\n      setBlogdata({\n        title: '',\n        text: '',\n        blogName: '',\n        file: []\n      });\n    }\n  }; // console.log(state)\n\n\n  useEffect(() => {\n    if (deleteId) {\n      dispatch(deleteBlog(deleteId)); // console.log(deleteId)\n    }\n\n    console.log();\n  }, [deleteId, dispatch]);\n  return {\n    setBlogdata,\n    setSlideimg,\n    update,\n    handlerSubmit,\n    state,\n    blogData,\n    setCurrentId,\n    handleUpdateimg,\n    currentId,\n    setDeleteId\n  };\n}\n\n_s(AdminFunctions, \"O60g+UITJiHDuumMH/VUJs239lc=\", false, function () {\n  return [useParams, useSelector, useDispatch, useSelector];\n});\n\n_c = AdminFunctions;\nexport default AdminFunctions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminFunctions\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/blogfolder/adminFunctions.js"],"names":["React","useState","useEffect","useDispatch","createUser","updateUser","deleteBlog","useSelector","useParams","AdminFunctions","id","state","blogs","currentId","setCurrentId","deleteId","setDeleteId","count","setCount","slideimg","setSlideimg","objectUrl","setObjectUrl","img1","setImg1","img2","setImg2","dispatch","blogData","setBlogdata","title","text","name","file","update","allData","find","blog","_id","handleUpdateimg","filepath","itemToRemoveIndex","findIndex","item","splice","Itemindex","filter","img","handlerSubmit","e","preventDefault","pop","console","log","blogName","replace","alert"],"mappings":"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","sourcesContent":["import {React, useState,useEffect} from 'react'\nimport {useDispatch } from 'react-redux';\nimport {createUser, updateUser, deleteBlog} from '../../../reducer/blogReducer/action'\nimport { useSelector } from 'react-redux';\nimport { useParams} from 'react-router-dom'\n\nfunction AdminFunctions() {\n  const {id} = useParams()\n  let state = useSelector((state) => state.blogs);\n  const [currentId, setCurrentId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [count, setCount] = useState(0);\n  const [slideimg, setSlideimg] = useState(\"\");\n  const [objectUrl, setObjectUrl] = useState([]);\n  const [img1, setImg1] = useState([])\n  const [img2, setImg2] = useState([])\n  const dispatch = useDispatch();\n  const [blogData, setBlogdata] =  useState({ \n    title: '', \n    text: '', \n    name: '', \n    file: [],\n  });\n  \n\n  const update = useSelector((state) =>(\n    id ? state.allData.find((blog) => blog._id === id) : null\n  ))\n  // function imgView(img) {\n  //   if(img.type){\n  //     const reader = new FileReader();\n  //     reader.onload = () =>{\n  //       if(reader.readyState === 2){\n  //         setObjectUrl(reader.result)\n  //       }\n  //     }\n  //   reader.readAsDataURL(img)\n  //   }\n    \n  // }\n\n  // useEffect(() => { \n  //     if(userData.file.length === 1){ \n  //       imgView(userData.file[0])\n  //       setImg1( objectUrl)\n  //     }else if(userData.file.length === 2){\n  //       imgView(userData.file[1])\n  //       setImg2( objectUrl)\n  //     }\n      \n  //     // console.log(objectUrl)\n      \n  // }, [userData.file,objectUrl ]) \n\n\n\n  useEffect(() => {\n    if(update){\n      setBlogdata (update)\n      setCurrentId(id)\n    }\n  }, [update])\n\n  function handleUpdateimg(filepath) {\n\n    const itemToRemoveIndex = blogData.file.findIndex( function(item) {\n      return item.filepath === filepath\n    })\n    setCount(count + 1)\n    blogData.file.splice(itemToRemoveIndex, 1)\n    return \n  }\n\n\n  let Itemindex  = false\n   Itemindex = blogData.file.filter((img) => img.name === slideimg)\n  // console.log(Itemindex)\n  \n  const handlerSubmit = (e) =>{\n    e.preventDefault();\n\n    if(slideimg){\n      if(slideimg !== blogData.file[0].name){\n        blogData.file.splice(0,0, Itemindex[0] )\n        blogData.file.pop()\n      } \n    }\n    console.log(blogData.file)\n    \n    console.log(id)\n    if(currentId === 0){\n      if(blogData.title && blogData.text && blogData.name && blogData.file){\n        blogData.blogName = blogData.name.replace(/[^a-zA-Z ]/g, \"\")\n        dispatch(createUser(blogData));\n        setBlogdata({\n          title: '', \n          text: '', \n          blogName: '', \n          file: []\n        })\n      }else{\n        alert(\"please insert data\")\n      }\n    }else{\n      \n      dispatch(updateUser(currentId, blogData))\n     \n      setCurrentId(0)\n      setBlogdata({\n        title: '', \n        text: '', \n        blogName: '', \n        file: []\n      })\n    }\n    \n  }\n  // console.log(state)\n\n  useEffect(() => {\n    if(deleteId){\n      dispatch(deleteBlog(deleteId))\n      // console.log(deleteId)\n    }\n    console.log()\n    \n  }, [deleteId,dispatch])\n\n\n  return{\n    setBlogdata,\n    setSlideimg,\n    update,\n    handlerSubmit,\n    state,\n    blogData,\n    setCurrentId,\n    handleUpdateimg,\n    currentId,\n    setDeleteId,\n  }\n\n}\n\nexport default AdminFunctions\n"]},"metadata":{},"sourceType":"module"}