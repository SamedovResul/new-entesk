{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/timetable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { GetTimetable, CreateTimetable, UpdateTimetable } from '../../../../reducer/crmRedux/action';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Create = () => {\n  _s();\n\n  const [id, setId] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GetTimetable());\n  }, []);\n  let state = useSelector(state => state); // console.log(state)\n\n  const [newTimetable, setNewtimetable] = useState({\n    student_Name: '',\n    student_Id: '',\n    teacher_Name: '',\n    teacher_Id: '',\n    class_Name: '',\n    class_Id: '',\n    date: ''\n  });\n  console.log(newTimetable);\n  console.log(state.timetableReducer); //  add class\n\n  state.classReducer.map(Class => {\n    const {\n      name,\n      _id\n    } = Class;\n\n    if (_id === newTimetable.class_Id) {\n      newTimetable.class_Name = name; // console.log(newTimetable)\n    }\n  }); // add student\n\n  state.studentReducer.map(student => {\n    const {\n      firstName,\n      _id\n    } = student;\n\n    if (_id === newTimetable.student_Id) {\n      newTimetable.student_Name = firstName; // console.log(newTimetable)\n    }\n  }); // add teacher\n\n  state.teacherReducer.map(student => {\n    const {\n      name,\n      _id\n    } = student;\n\n    if (_id === newTimetable.teacher_Id) {\n      newTimetable.teacher_Name = name; // console.log(newTimetable)\n    }\n  });\n  const history = useHistory(); // console.log(new Date(newTimetable.date))\n  // update timetable\n\n  useEffect(() => {\n    state.timetableReducer.map(timetable => {\n      const {\n        _id\n      } = timetable;\n\n      if (_id === id) {\n        setNewtimetable(timetable);\n      }\n    });\n  }, [id]); // console.log(state.timetableReducer[0])\n  // create timatable\n\n  const createTimetbale = e => {\n    if (id) {\n      dispatch(UpdateTimetable(newTimetable, id));\n    } else {\n      dispatch(CreateTimetable(newTimetable));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"  create Timetable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => {\n                  setNewtimetable({ ...newTimetable,\n                    teacher_Id: e.target.value\n                  });\n                },\n                name: \"students\",\n                id: \"teacher\",\n                children: state.teacherReducer.map((teacher, index) => {\n                  const {\n                    name,\n                    _id\n                  } = teacher;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: _id,\n                    children: name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => {\n                  setNewtimetable({ ...newTimetable,\n                    student_Id: e.target.value\n                  });\n                },\n                name: \"students\",\n                id: \"student\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"select\",\n                  children: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 17\n                }, this), state.studentReducer.map((student, index) => {\n                  const {\n                    firstName,\n                    _id\n                  } = student;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: _id,\n                    children: firstName\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => {\n                  setNewtimetable({ ...newTimetable,\n                    class_Id: e.target.value\n                  });\n                },\n                name: \"class\",\n                id: \"class\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"select\",\n                  children: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 17\n                }, this), state.classReducer.map((clas, index) => {\n                  const {\n                    name,\n                    _id\n                  } = clas;\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: _id,\n                    children: name\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"datetime-local\",\n                id: \"date\",\n                name: \"date\",\n                onChange: e => {\n                  setNewtimetable({ ...newTimetable,\n                    date: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), state.timetableReducer.map((timetable, index) => {\n          const {\n            student_Name,\n            teacher_Name,\n            class_Name,\n            date,\n            _id\n          } = timetable;\n          const time = new Date(date);\n          const minute = time.getMinutes();\n          const hour = time.getHours();\n          const day = time.getDay();\n          const month = time.getMonth();\n          const year = time.getFullYear(); // console.log(year)\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"teacher:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 32\n                }, this), \"  \", teacher_Name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"student:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 32\n                }, this), \"  \", student_Name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"class:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 32\n                }, this), \" \", class_Name, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 32\n                }, this), `${year} ${month} ${day} ${hour}:${minute}`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"class state\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 33\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"nun\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 53\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setId(_id);\n                },\n                children: \"update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 25\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"ATLJQqdXohBRWSWHeUwJv4Xd3Lc=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/timetable.js"],"names":["React","useState","useEffect","useSelector","GetTimetable","CreateTimetable","UpdateTimetable","useHistory","useDispatch","Create","id","setId","dispatch","state","newTimetable","setNewtimetable","student_Name","student_Id","teacher_Name","teacher_Id","class_Name","class_Id","date","console","log","timetableReducer","classReducer","map","Class","name","_id","studentReducer","student","firstName","teacherReducer","history","timetable","createTimetbale","e","target","value","teacher","index","clas","time","Date","minute","getMinutes","hour","getHours","day","getDay","month","getMonth","year","getFullYear"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { useSelector } from 'react-redux';\nimport {GetTimetable,CreateTimetable,UpdateTimetable} from '../../../../reducer/crmRedux/action'\nimport { useHistory } from 'react-router-dom';\nimport {useDispatch } from 'react-redux';\n\n\nconst Create = () => {\n  const [id, setId] = useState('')\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GetTimetable())\n  }, [])\n  \n  let state = useSelector((state) => state);\n  // console.log(state)\n  const [newTimetable, setNewtimetable] = useState({\n    student_Name: '',\n    student_Id: '',\n    teacher_Name: '',\n    teacher_Id: '',\n    class_Name: '',\n    class_Id: '',\n    date: '',\n  })\n  console.log(newTimetable)\n  console.log(state.timetableReducer)\n  //  add class\n  state.classReducer.map((Class) =>{\n    const {name, _id} = Class\n    if(_id === newTimetable.class_Id){\n        newTimetable.class_Name = name\n      // console.log(newTimetable)\n    }\n  })\n\n  // add student\n  state.studentReducer.map((student) =>{\n    const {firstName, _id} = student\n    if(_id === newTimetable.student_Id){\n      newTimetable.student_Name = firstName\n    // console.log(newTimetable)\n    }\n  })\n\n  // add teacher\n  state.teacherReducer.map((student) =>{\n    const {name, _id} = student\n    if(_id === newTimetable.teacher_Id){\n      newTimetable.teacher_Name = name\n    // console.log(newTimetable)\n    }\n  })\n\n  const history = useHistory();\n\n  // console.log(new Date(newTimetable.date))\n\n  // update timetable\n\n\n  useEffect(() => {\n    state.timetableReducer.map((timetable) =>{\n      const {_id} = timetable\n      if(_id === id){\n        setNewtimetable(timetable)\n      }\n    })\n  }, [id])\n  \n  // console.log(state.timetableReducer[0])\n\n  // create timatable\n  const  createTimetbale = (e) =>{\n    if(id){\n      dispatch(UpdateTimetable(newTimetable, id))\n    }else{\n      dispatch(CreateTimetable(newTimetable))\n    }\n    \n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"create-data\">\n              <p>  create Timetable</p>\n            <form action=\"\">\n              {/* select teacher  */}\n              <select \n                onChange={(e) =>{\n                  setNewtimetable({\n                    ...newTimetable, teacher_Id: e.target.value\n                  })\n                }}\n                \n                name=\"students\" id=\"teacher\">\n                  {/* {\n                    newTimetable.teacher_Id ? (\n                      <option  value=\"select\"> {newTimetable.teacher_Name} </option>\n                    ):(\n                      <option  value=\"select\"> select </option>\n                    )\n                  } */}\n                \n                {\n                  state.teacherReducer.map((teacher, index) =>{\n                    const {name, _id} = teacher\n\n                    return(\n                      <option key={index} value={_id}>{name}</option>\n                    )\n                  })\n                }\n              </select>\n              {/* select student */}\n              <select\n              onChange={(e) =>{\n                setNewtimetable({\n                  ...newTimetable, student_Id: e.target.value\n                })\n              }}\n              name=\"students\" id=\"student\">\n                <option  value=\"select\">select</option>\n                {\n                  state.studentReducer.map((student, index) =>{\n                    const {firstName, _id} = student\n\n                    return(\n                      <option key={index} value={_id}>{firstName}</option>\n                    )\n                  })\n                }\n              </select>\n              {/* select class */}\n              <select\n                onChange={(e) =>{\n                  setNewtimetable({\n                    ...newTimetable, class_Id: e.target.value\n                  })\n                }} \n                name=\"class\" id='class'>\n                <option  value=\"select\">select</option>\n                {\n                  state.classReducer.map((clas, index) =>{\n                    const {name, _id} = clas\n\n                    return(\n                      <option key={index} value={_id}>{name}</option>\n                    )\n                  })\n                }\n              </select>\n\n              \n              {/* set date */}\n              <input type=\"datetime-local\" id=\"date\" name=\"date\"\n                \n                onChange={(e) =>{\n                  setNewtimetable({\n                    ...newTimetable, date: e.target.value\n                  })\n                }}\n              />\n            </form>\n            </div>\n          </div>\n\n              {/* <button\n                onClick={() =>{\n                  createTimetbale()\n                }}\n              >\n                {\n                  id ? (\n                    <span>Update</span>\n                  ) :(\n                    <span>Create</span>\n                  )\n                }\n                \n              </button> */}\n\n                {\n                  state.timetableReducer.map((timetable, index) =>{\n                    const {\n                      student_Name,\n                      teacher_Name,\n                      class_Name,\n                      date,\n                      _id\n                    } =timetable\n                    const time = new Date(date)\n                    const minute = time.getMinutes()\n                    const hour = time.getHours()\n                    const day = time.getDay()\n                    const month = time.getMonth()\n                    const year = time.getFullYear()\n                    // console.log(year)\n                    return(\n\n                      <div key={index} className='col-md-4'>\n                        <div className=\"time-table\">\n                          \n                          {/* <li   value={_id} >\n                          <span>status: {\n                              status === 1? ( <span>active</span> ) :( <span>inactive</span> )\n                            } \n                          </span>\n                          </li> */}\n                          \n                            <p><b>teacher:</b>  {teacher_Name} </p>\n                            <p><b>student:</b>  {student_Name} </p> \n                            <p><b>class:</b> {class_Name}  </p>  \n                            <p><b>date:</b>{`${year} ${month} ${day} ${hour}:${minute}`} </p>\n                            <p> <b>class state</b>  <span>nun</span> </p>\n\n                            <button\n                            onClick={()=>{\n                              setId(_id)\n                            }}\n                            >\n                              update\n                            </button>\n                        </div>\n                      </div>\n\n                    )\n                  })\n                }\n\n          \n        </div>\n      </div>\n    </div>\n    \n\n  )\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}