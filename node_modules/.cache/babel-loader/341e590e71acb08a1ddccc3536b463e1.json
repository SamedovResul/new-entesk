{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/classes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreateClass, UpdateClass, GetClass, DeleteClass } from '../../../../reducer/crmRedux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Classes = () => {\n  _s();\n\n  const [data, setData] = useState({\n    name: \"\",\n    content: \"\"\n  });\n  const [id, setId] = useState({});\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.classReducer); // get classes\n\n  useEffect(() => {\n    dispatch(GetClass());\n  }, []); // select update classes\n\n  useEffect(() => {\n    state.map(classes => {\n      const {\n        _id\n      } = classes;\n\n      if (_id === id.id) {\n        setData(classes);\n      }\n    });\n  }, [id]); // create delete class\n\n  const createClass = e => {\n    if (id.id) {\n      dispatch(UpdateClass(id.id, data));\n      setData({\n        name: \"\",\n        content: \"\"\n      });\n    } else {\n      dispatch(CreateClass(data));\n      setData({\n        name: \"\",\n        content: \"\"\n      });\n    }\n  };\n\n  const deleteClass = id => {\n    console.log(id);\n    dispatch(DeleteClass(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-class\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"class name: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"name\",\n                  value: data.name,\n                  onChange: e => {\n                    setData({ ...data,\n                      name: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Title: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"content\",\n                  value: data.content,\n                  onChange: e => {\n                    setData({ ...data,\n                      content: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  createClass();\n                },\n                children: id.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this) // <div className='create-data'>\n  //   <p>create class</p>\n  //   <form action=\"\">\n  //     <label htmlFor=\"name\">\n  //       class name\n  //       <input type=\"text\" id=\"name\"\n  //       value={data.name}\n  //         onChange={(e) =>{\n  //           setData({\n  //             ...data, name: e.target.value\n  //           })\n  //         }}\n  //       />\n  //     </label>\n  //     <label htmlFor=\"content\">\n  //       content\n  //       <input type=\"text\" id=\"content\" \n  //         value={data.content}\n  //         onChange={(e) =>{\n  //           setData({\n  //             ...data, content:e.target.value\n  //           })\n  //         }}\n  //       />\n  //     </label>\n  //   </form>\n  //   <button\n  //       onClick={() =>{\n  //         createClass()\n  //       }}\n  //     >\n  //       {\n  //         id.id ? (\n  //           <span>update</span> \n  //         ):(\n  //           <span>create</span> \n  //         )\n  //       }\n  //   </button>\n  //   <div className=\"data\">\n  //     <ul>\n  //       {\n  //         state.map((clas, index) =>{\n  //           const {name, _id,content} =clas\n  //           return(\n  //             <div key={index}>\n  //               <button\n  //                 onClick={()=>{\n  //                   setId({id: _id})\n  //                 }}\n  //                >\n  //                 update\n  //               </button>\n  //               <li  key={index} value={_id} >\n  //               <span> {name} </span> \n  //               </li>\n  //                 <button\n  //                   onClick={()=>{\n  //                     deleteClass(_id)\n  //                   }}\n  //                 >\n  //                 &#9747;\n  //                 </button>\n  //             </div>\n  //           )\n  //         })\n  //       }\n  //     </ul>\n  //   </div>\n  // </div>\n  ;\n};\n\n_s(Classes, \"MrjiT9T4fp8V3vbppaBeo5RZ1TE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/classes.js"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","CreateClass","UpdateClass","GetClass","DeleteClass","Classes","data","setData","name","content","id","setId","dispatch","state","classReducer","map","classes","_id","createClass","e","deleteClass","console","log","target","value"],"mappings":"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AAACN,kBAAAA,WAAW;AAAG,iBAArC;AAAA,0BAEMR,EAAE,CAACA,EAAH,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,gBAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,sBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CA6CE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAxHF;AA0HD,CAzKD;;GAAML,O;UAMaL,W,EACHD,W;;;KAPVM,O;AA2KN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { \n  CreateClass, \n  UpdateClass,\n  GetClass,\n  DeleteClass\n} from '../../../../reducer/crmRedux/action';\n\nconst Classes = () => {\n  const [data, setData] = useState({\n    name:\"\",\n    content:\"\",\n  })\n  const [id, setId] = useState({})\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.classReducer);\n    \n    // get classes\n  useEffect(() => {\n    dispatch(GetClass())\n  }, [])\n  \n\n    \n  // select update classes\n  useEffect(() => {\n    state.map((classes) =>{\n      const {_id} = classes\n      if(_id === id.id){\n        setData(classes)\n      }\n    })\n  }, [id])\n\n    // create delete class\n  const createClass = (e) =>{\n    if(id.id){\n      dispatch(UpdateClass(id.id,data))\n      setData({\n        name:\"\",\n        content:\"\",\n      })\n    }else{\n      dispatch(CreateClass(data))\n      setData({\n        name:\"\",\n        content:\"\",\n      })\n    }\n  }\n\n  const deleteClass =(id) =>{\n    console.log(id)\n    dispatch(DeleteClass(id))\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"create-class\">\n              <form action=\"\">\n                <label htmlFor=\"name\">\n                  <b>class name: </b>\n                  <input type=\"text\" id=\"name\"\n                  value={data.name}\n                    onChange={(e) =>{\n                      setData({\n                        ...data, name: e.target.value\n                      })\n                    }}\n                  />\n                </label>\n                <label htmlFor=\"content\">\n                  <b>Title: </b>\n                  <input type=\"text\" id=\"content\" \n                    value={data.content}\n                    onChange={(e) =>{\n                      setData({\n                        ...data, content:e.target.value\n                      })\n                    }}\n                  />\n                </label>\n                <button onClick={() =>{createClass()}}>\n                    {\n                      id.id ? (\n                        <span>update</span> \n                      ):(\n                        <span>create</span> \n                      )\n\n                    }\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    // <div className='create-data'>\n    //   <p>create class</p>\n    //   <form action=\"\">\n    //     <label htmlFor=\"name\">\n    //       class name\n    //       <input type=\"text\" id=\"name\"\n    //       value={data.name}\n    //         onChange={(e) =>{\n    //           setData({\n    //             ...data, name: e.target.value\n    //           })\n    //         }}\n    //       />\n    //     </label>\n    //     <label htmlFor=\"content\">\n    //       content\n    //       <input type=\"text\" id=\"content\" \n    //         value={data.content}\n    //         onChange={(e) =>{\n    //           setData({\n    //             ...data, content:e.target.value\n    //           })\n    //         }}\n    //       />\n    //     </label>\n    //   </form>\n    //   <button\n    //       onClick={() =>{\n    //         createClass()\n    //       }}\n    //     >\n    //       {\n    //         id.id ? (\n    //           <span>update</span> \n    //         ):(\n    //           <span>create</span> \n    //         )\n\n    //       }\n          \n    //   </button>\n      \n    //   <div className=\"data\">\n\n    //     <ul>\n    //       {\n    //         state.map((clas, index) =>{\n    //           const {name, _id,content} =clas\n              \n    //           return(\n    //             <div key={index}>\n    //               <button\n    //                 onClick={()=>{\n    //                   setId({id: _id})\n    //                 }}\n    //                >\n    //                 update\n    //               </button>\n    //               <li  key={index} value={_id} >\n    //               <span> {name} </span> \n    //               </li>\n    //                 <button\n    //                   onClick={()=>{\n    //                     deleteClass(_id)\n    //                   }}\n    //                 >\n    //                 &#9747;\n    //                 </button>\n    //             </div>\n\n    //           )\n    //         })\n    //       }\n    //     </ul>\n    //   </div>\n    // </div>\n  )\n}\n\nexport default Classes"]},"metadata":{},"sourceType":"module"}