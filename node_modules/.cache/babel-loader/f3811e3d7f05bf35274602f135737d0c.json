{"ast":null,"code":"import { useId as e } from \"@radix-ui/react-id\";\nimport * as o from \"@radix-ui/react-visually-hidden\";\nimport { Slottable as t } from \"@radix-ui/react-slot\";\nimport { Portal as r } from \"@radix-ui/react-portal\";\nimport * as n from \"@radix-ui/react-popper\";\nimport { createPopperScope as i } from \"@radix-ui/react-popper\";\nimport { Primitive as a } from \"@radix-ui/react-primitive\";\nimport { Presence as l } from \"@radix-ui/react-presence\";\nimport { useRect as c } from \"@radix-ui/react-use-rect\";\nimport { usePrevious as s } from \"@radix-ui/react-use-previous\";\nimport { useEscapeKeydown as u } from \"@radix-ui/react-use-escape-keydown\";\nimport { useControllableState as p } from \"@radix-ui/react-use-controllable-state\";\nimport { createContextScope as d } from \"@radix-ui/react-context\";\nimport { useComposedRefs as m } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers as f } from \"@radix-ui/primitive\";\nimport * as T from \"react\";\nimport C from \"@babel/runtime/helpers/esm/extends\";\nconst [w, x] = d(\"Tooltip\", [i]);\nexport { x as createTooltipScope };\nconst g = i(),\n      E = 700,\n      [v, b] = w(\"TooltipProvider\", {\n  isOpenDelayed: !0,\n  delayDuration: E,\n  onOpen: () => {},\n  onClose: () => {}\n});\nexport const TooltipProvider = e => {\n  const {\n    __scopeTooltip: o,\n    delayDuration: t = E,\n    skipDelayDuration: r = 300,\n    children: n\n  } = e,\n        [i, a] = T.useState(!0),\n        l = T.useRef(0);\n  return T.useEffect(() => {\n    const e = l.current;\n    return () => window.clearTimeout(e);\n  }, []), /*#__PURE__*/T.createElement(v, {\n    scope: o,\n    isOpenDelayed: i,\n    delayDuration: t,\n    onOpen: T.useCallback(() => {\n      window.clearTimeout(l.current), a(!1);\n    }, []),\n    onClose: T.useCallback(() => {\n      window.clearTimeout(l.current), l.current = window.setTimeout(() => a(!0), r);\n    }, [r])\n  }, n);\n};\n/*#__PURE__*/\n\nconst [y, _] = w(\"Tooltip\");\nexport const Tooltip = o => {\n  const {\n    __scopeTooltip: t,\n    children: r,\n    open: i,\n    defaultOpen: a = !1,\n    onOpenChange: l,\n    delayDuration: c\n  } = o,\n        s = b(\"Tooltip\", t),\n        u = g(t),\n        [d, m] = T.useState(null),\n        f = e(),\n        C = T.useRef(0),\n        w = null != c ? c : s.delayDuration,\n        x = T.useRef(!1),\n        {\n    onOpen: E,\n    onClose: v\n  } = s,\n        [_ = !1, h] = p({\n    prop: i,\n    defaultProp: a,\n    onChange: e => {\n      e && (document.dispatchEvent(new CustomEvent(\"tooltip.open\")), E()), null == l || l(e);\n    }\n  }),\n        k = T.useMemo(() => _ ? x.current ? \"delayed-open\" : \"instant-open\" : \"closed\", [_]),\n        D = T.useCallback(() => {\n    window.clearTimeout(C.current), x.current = !1, h(!0);\n  }, [h]),\n        O = T.useCallback(() => {\n    window.clearTimeout(C.current), C.current = window.setTimeout(() => {\n      x.current = !0, h(!0);\n    }, w);\n  }, [w, h]);\n  return T.useEffect(() => () => window.clearTimeout(C.current), []), /*#__PURE__*/T.createElement(n.Root, u, /*#__PURE__*/T.createElement(y, {\n    scope: t,\n    contentId: f,\n    open: _,\n    stateAttribute: k,\n    trigger: d,\n    onTriggerChange: m,\n    onTriggerEnter: T.useCallback(() => {\n      s.isOpenDelayed ? O() : D();\n    }, [s.isOpenDelayed, O, D]),\n    onOpen: T.useCallback(D, [D]),\n    onClose: T.useCallback(() => {\n      window.clearTimeout(C.current), h(!1), v();\n    }, [h, v])\n  }, r));\n};\n/*#__PURE__*/\n\nexport const TooltipTrigger = /*#__PURE__*/T.forwardRef((e, o) => {\n  const {\n    __scopeTooltip: t,\n    ...r\n  } = e,\n        i = _(\"TooltipTrigger\", t),\n        l = g(t),\n        c = m(o, i.onTriggerChange),\n        s = T.useRef(!1),\n        u = T.useCallback(() => s.current = !1, []);\n\n  return T.useEffect(() => () => document.removeEventListener(\"mouseup\", u), [u]), /*#__PURE__*/T.createElement(n.Anchor, C({\n    asChild: !0\n  }, l), /*#__PURE__*/T.createElement(a.button, C({\n    \"aria-describedby\": i.open ? i.contentId : void 0,\n    \"data-state\": i.stateAttribute\n  }, r, {\n    ref: c,\n    onMouseEnter: f(e.onMouseEnter, i.onTriggerEnter),\n    onMouseLeave: f(e.onMouseLeave, i.onClose),\n    onMouseDown: f(e.onMouseDown, () => {\n      i.onClose(), s.current = !0, document.addEventListener(\"mouseup\", u, {\n        once: !0\n      });\n    }),\n    onFocus: f(e.onFocus, () => {\n      s.current || i.onOpen();\n    }),\n    onBlur: f(e.onBlur, i.onClose),\n    onClick: f(e.onClick, i.onClose)\n  })));\n});\n/*#__PURE__*/\n\nexport const TooltipContent = /*#__PURE__*/T.forwardRef((e, o) => {\n  const {\n    forceMount: t,\n    ...r\n  } = e,\n        n = _(\"TooltipContent\", e.__scopeTooltip);\n  /*#__PURE__*/\n\n\n  return T.createElement(l, {\n    present: t || n.open\n  }, /*#__PURE__*/T.createElement(h, C({\n    ref: o\n  }, r)));\n});\nconst h = /*#__PURE__*/T.forwardRef((e, i) => {\n  const {\n    __scopeTooltip: a,\n    children: l,\n    \"aria-label\": c,\n    portalled: s = !0,\n    ...p\n  } = e,\n        d = _(\"TooltipContent\", a),\n        m = g(a),\n        f = s ? r : T.Fragment,\n        {\n    onClose: w\n  } = d;\n\n  return u(() => w()), T.useEffect(() => (document.addEventListener(\"tooltip.open\", w), () => document.removeEventListener(\"tooltip.open\", w)), [w]), /*#__PURE__*/T.createElement(f, null, /*#__PURE__*/T.createElement(k, {\n    __scopeTooltip: a\n  }), /*#__PURE__*/T.createElement(n.Content, C({\n    \"data-state\": d.stateAttribute\n  }, m, p, {\n    ref: i,\n    style: { ...p.style,\n      \"--radix-tooltip-content-transform-origin\": \"var(--radix-popper-transform-origin)\"\n    }\n  }), /*#__PURE__*/T.createElement(t, null, l), /*#__PURE__*/T.createElement(o.Root, {\n    id: d.contentId,\n    role: \"tooltip\"\n  }, c || l)));\n});\n/*#__PURE__*/\n\nexport const TooltipArrow = /*#__PURE__*/T.forwardRef((e, o) => {\n  const {\n    __scopeTooltip: t,\n    ...r\n  } = e,\n        i = g(t);\n  /*#__PURE__*/\n\n  return T.createElement(n.Arrow, C({}, i, r, {\n    ref: o\n  }));\n});\n/*#__PURE__*/\n\nfunction k(e) {\n  const {\n    __scopeTooltip: o\n  } = e,\n        t = _(\"CheckTriggerMoved\", o),\n        r = c(t.trigger),\n        n = null == r ? void 0 : r.left,\n        i = s(n),\n        a = null == r ? void 0 : r.top,\n        l = s(a),\n        u = t.onClose;\n\n  return T.useEffect(() => {\n    (void 0 !== i && i !== n || void 0 !== l && l !== a) && u();\n  }, [u, i, l, n, a]), null;\n}\n\nexport const Provider = TooltipProvider;\nexport const Root = Tooltip;\nexport const Trigger = TooltipTrigger;\nexport const Content = TooltipContent;\nexport const Arrow = TooltipArrow;","map":{"version":3,"sources":["packages/react/tooltip/src/Tooltip.tsx"],"names":["createTooltipContext","createTooltipScope","createContextScope","createPopperScope","usePopperScope","DEFAULT_DELAY_DURATION","TooltipProviderContextProvider","useTooltipProviderContext","isOpenDelayed","delayDuration","onOpen","onClose","TooltipProvider","props","__scopeTooltip","skipDelayDuration","children","setIsOpenDelayed","React","useState","skipDelayTimerRef","useRef","useEffect","skipDelayTimer","current","window","clearTimeout","_react","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipProviderContextProvider","scope","useCallback","setTimeout","TooltipContextProvider","useTooltipContext","Tooltip","open","openProp","defaultOpen","onOpenChange","delayDurationProp","context","popperScope","trigger","setTrigger","contentId","useId","openTimerRef","wasOpenDelayedRef","setOpen","useControllableState","prop","defaultProp","onChange","document","dispatchEvent","CustomEvent","stateAttribute","useMemo","handleOpen","handleDelayedOpen","_radixUiReactPopper","Root","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipContextProvider","onTriggerChange","onTriggerEnter","TooltipTrigger","forwardRef","forwardedRef","triggerProps","composedTriggerRef","useComposedRefs","isMouseDownRef","handleMouseUp","removeEventListener","Anchor","asChild","Primitive","button","undefined","ref","onMouseEnter","composeEventHandlers","onMouseLeave","onMouseDown","addEventListener","once","onFocus","onBlur","onClick","TooltipContent","forceMount","contentProps","Presence","present","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$TooltipContentImpl","TooltipContentImpl","ariaLabel","portalled","PortalWrapper","Portal","Fragment","useEscapeKeydown","$badf5d6f88b7e9fa4e0bb85d71c0396a$var$CheckTriggerMoved","Content","style","Slottable","_radixUiReactVisuallyHidden","id","role","TooltipArrow","arrowProps","Arrow","CheckTriggerMoved","triggerRect","useRect","triggerLeft","left","previousTriggerLeft","usePrevious","triggerTop","top","previousTriggerTop","handleClose","Provider","Trigger"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Slottable } from '@radix-ui/react-slot';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P = {}> = P & { __scopeTooltip?: Scope };\nconst [createTooltipContext, createTooltipScope] = createContextScope('Tooltip', [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'TooltipProvider';\nconst DEFAULT_DELAY_DURATION = 700;\nconst TOOLTIP_OPEN = 'tooltip.open';\n\ntype TooltipProviderContextValue = {\n  isOpenDelayed: boolean;\n  delayDuration: number;\n  onOpen(): void;\n  onClose(): void;\n};\n\nconst [TooltipProviderContextProvider, useTooltipProviderContext] =\n  createTooltipContext<TooltipProviderContextValue>(PROVIDER_NAME, {\n    isOpenDelayed: true,\n    delayDuration: DEFAULT_DELAY_DURATION,\n    onOpen: () => {},\n    onClose: () => {},\n  });\n\ninterface TooltipProviderProps {\n  /**\n   * The duration from when the mouse enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n  children: React.ReactNode;\n}\n\nconst TooltipProvider: React.FC<TooltipProviderProps> = (\n  props: ScopedProps<TooltipProviderProps>\n) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    children,\n  } = props;\n  const [isOpenDelayed, setIsOpenDelayed] = React.useState(true);\n  const skipDelayTimerRef = React.useRef(0);\n\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n\n  return (\n    <TooltipProviderContextProvider\n      scope={__scopeTooltip}\n      isOpenDelayed={isOpenDelayed}\n      delayDuration={delayDuration}\n      onOpen={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        setIsOpenDelayed(false);\n      }, [])}\n      onClose={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => setIsOpenDelayed(true),\n          skipDelayDuration\n        );\n      }, [skipDelayDuration])}\n    >\n      {children}\n    </TooltipProviderContextProvider>\n  );\n};\n\nTooltipProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: 'closed' | 'delayed-open' | 'instant-open';\n  trigger: TooltipTriggerElement | null;\n  onTriggerChange(trigger: TooltipTriggerElement | null): void;\n  onTriggerEnter(): void;\n  onOpen(): void;\n  onClose(): void;\n};\n\nconst [TooltipContextProvider, useTooltipContext] =\n  createTooltipContext<TooltipContextValue>(TOOLTIP_NAME);\n\ninterface TooltipProps {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n\n  /**\n   * The duration from when the mouse enters the trigger until the tooltip gets opened. This will\n   * override the prop with the same name passed to Provider.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  children?: React.ReactNode;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props: ScopedProps<TooltipProps>) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen = false,\n    onOpenChange,\n    delayDuration: delayDurationProp,\n  } = props;\n  const context = useTooltipProviderContext(TOOLTIP_NAME, __scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const delayDuration = delayDurationProp ?? context.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const { onOpen, onClose } = context;\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: (open) => {\n      if (open) {\n        // we dispatch here so `TooltipProvider` isn't required to\n        // ensure other tooltips are aware of this one opening.\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n        onOpen();\n      }\n      onOpenChange?.(open);\n    },\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? (wasOpenDelayedRef.current ? 'delayed-open' : 'instant-open') : 'closed';\n  }, [open]);\n\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(openTimerRef.current);\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <TooltipContextProvider\n        scope={__scopeTooltip}\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onTriggerEnter={React.useCallback(() => {\n          if (context.isOpenDelayed) handleDelayedOpen();\n          else handleOpen();\n        }, [context.isOpenDelayed, handleDelayedOpen, handleOpen])}\n        onOpen={React.useCallback(handleOpen, [handleOpen])}\n        onClose={React.useCallback(() => {\n          window.clearTimeout(openTimerRef.current);\n          setOpen(false);\n          onClose();\n        }, [setOpen, onClose])}\n      >\n        {children}\n      </TooltipContextProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\n\ntype TooltipTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TooltipTriggerProps extends PrimitiveButtonProps {}\n\nconst TooltipTrigger = React.forwardRef<TooltipTriggerElement, TooltipTriggerProps>(\n  (props: ScopedProps<TooltipTriggerProps>, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const isMouseDownRef = React.useRef(false);\n    const handleMouseUp = React.useCallback(() => (isMouseDownRef.current = false), []);\n\n    React.useEffect(() => {\n      return () => document.removeEventListener('mouseup', handleMouseUp);\n    }, [handleMouseUp]);\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          // We purposefully avoid adding `type=button` here because tooltip triggers are also\n          // commonly anchors and the anchor `type` attribute signifies MIME type.\n          aria-describedby={context.open ? context.contentId : undefined}\n          data-state={context.stateAttribute}\n          {...triggerProps}\n          ref={composedTriggerRef}\n          onMouseEnter={composeEventHandlers(props.onMouseEnter, context.onTriggerEnter)}\n          onMouseLeave={composeEventHandlers(props.onMouseLeave, context.onClose)}\n          onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n            context.onClose();\n            isMouseDownRef.current = true;\n            document.addEventListener('mouseup', handleMouseUp, { once: true });\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            if (!isMouseDownRef.current) context.onOpen();\n          })}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          // Handle anything that the browser considers a click for the element type if\n          // not using pointer e.g. Space keyup and Enter keydown\n          onClick={composeEventHandlers(props.onClick, context.onClose)}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentElement = TooltipContentImplElement;\ninterface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipContent = React.forwardRef<TooltipContentElement, TooltipContentProps>(\n  (props: ScopedProps<TooltipContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n    return (\n      <Presence present={forceMount || context.open}>\n        <TooltipContentImpl ref={forwardedRef} {...contentProps} />\n      </Presence>\n    );\n  }\n);\n\ntype TooltipContentImplElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface TooltipContentImplProps extends PopperContentProps {\n  /**\n   * A more descriptive label for accessibility purpose\n   */\n  'aria-label'?: string;\n\n  /**\n   * Whether the Tooltip should render in a Portal\n   * (default: `true`)\n   */\n  portalled?: boolean;\n}\n\nconst TooltipContentImpl = React.forwardRef<TooltipContentImplElement, TooltipContentImplProps>(\n  (props: ScopedProps<TooltipContentImplProps>, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      'aria-label': ariaLabel,\n      portalled = true,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const PortalWrapper = portalled ? Portal : React.Fragment;\n    const { onClose } = context;\n\n    useEscapeKeydown(() => onClose());\n\n    React.useEffect(() => {\n      // Close this tooltip if another one opens\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n\n    return (\n      <PortalWrapper>\n        <CheckTriggerMoved __scopeTooltip={__scopeTooltip} />\n        <PopperPrimitive.Content\n          data-state={context.stateAttribute}\n          {...popperScope}\n          {...contentProps}\n          ref={forwardedRef}\n          style={{\n            ...contentProps.style,\n            // re-namespace exposed content custom property\n            ['--radix-tooltip-content-transform-origin' as any]:\n              'var(--radix-popper-transform-origin)',\n          }}\n        >\n          <Slottable>{children}</Slottable>\n          <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n            {ariaLabel || children}\n          </VisuallyHiddenPrimitive.Root>\n        </PopperPrimitive.Content>\n      </PortalWrapper>\n    );\n  }\n);\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'TooltipArrow';\n\ntype TooltipArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface TooltipArrowProps extends PopperArrowProps {}\n\nconst TooltipArrow = React.forwardRef<TooltipArrowElement, TooltipArrowProps>(\n  (props: ScopedProps<TooltipArrowProps>, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    return <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />;\n  }\n);\n\nTooltipArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction CheckTriggerMoved(props: ScopedProps<{}>) {\n  const { __scopeTooltip } = props;\n  const context = useTooltipContext('CheckTriggerMoved', __scopeTooltip);\n\n  const triggerRect = useRect(context.trigger);\n  const triggerLeft = triggerRect?.left;\n  const previousTriggerLeft = usePrevious(triggerLeft);\n  const triggerTop = triggerRect?.top;\n  const previousTriggerTop = usePrevious(triggerTop);\n  const handleClose = context.onClose;\n\n  React.useEffect(() => {\n    // checking if the user has scrolled…\n    const hasTriggerMoved =\n      (previousTriggerLeft !== undefined && previousTriggerLeft !== triggerLeft) ||\n      (previousTriggerTop !== undefined && previousTriggerTop !== triggerTop);\n\n    if (hasTriggerMoved) {\n      handleClose();\n    }\n  }, [handleClose, previousTriggerLeft, previousTriggerTop, triggerLeft, triggerTop]);\n\n  return null;\n}\n\nconst Provider = TooltipProvider;\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Content,\n  Arrow,\n};\nexport type { TooltipProps, TooltipTriggerProps, TooltipContentProps, TooltipArrowProps };\n"]},"metadata":{},"sourceType":"module"}