{"ast":null,"code":"import * as e from \"@radix-ui/react-arrow\";\nimport { Primitive as o } from \"@radix-ui/react-primitive\";\nimport { useSize as r } from \"@radix-ui/react-use-size\";\nimport { useRect as t } from \"@radix-ui/react-use-rect\";\nimport { createContextScope as n } from \"@radix-ui/react-context\";\nimport { useComposedRefs as i } from \"@radix-ui/react-compose-refs\";\nimport { getPlacementData as p } from \"@radix-ui/popper\";\nimport * as s from \"react\";\nimport a from \"@babel/runtime/helpers/esm/extends\";\nconst [c, l] = n(\"Popper\");\nexport { l as createPopperScope };\nconst [f, d] = c(\"Popper\");\nexport const Popper = e => {\n  const {\n    __scopePopper: o,\n    children: r\n  } = e,\n        [t, n] = s.useState(null);\n  /*#__PURE__*/\n\n  return s.createElement(f, {\n    scope: o,\n    anchor: t,\n    onAnchorChange: n\n  }, r);\n};\n/*#__PURE__*/\n\nexport const PopperAnchor = /*#__PURE__*/s.forwardRef((e, r) => {\n  const {\n    __scopePopper: t,\n    virtualRef: n,\n    ...p\n  } = e,\n        c = d(\"PopperAnchor\", t),\n        l = s.useRef(null),\n        f = i(r, l);\n  return s.useEffect(() => {\n    c.onAnchorChange((null == n ? void 0 : n.current) || l.current);\n  }), n ? null : /*#__PURE__*/s.createElement(o.div, a({}, p, {\n    ref: f\n  }));\n});\n/*#__PURE__*/\n\nconst [u, m] = c(\"PopperContent\");\nexport const PopperContent = /*#__PURE__*/s.forwardRef((e, n) => {\n  const {\n    __scopePopper: c,\n    side: l = \"bottom\",\n    sideOffset: f,\n    align: m = \"center\",\n    alignOffset: w,\n    collisionTolerance: h,\n    avoidCollisions: x = !0,\n    ...v\n  } = e,\n        P = d(\"PopperContent\", c),\n        [A, g] = s.useState(),\n        E = t(P.anchor),\n        [y, C] = s.useState(null),\n        S = r(y),\n        [R, O] = s.useState(null),\n        _ = r(R),\n        b = i(n, e => C(e)),\n        z = function () {\n    const [e, o] = s.useState(void 0);\n    return s.useEffect(() => {\n      let e;\n\n      function r() {\n        o({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }\n\n      function t() {\n        window.clearTimeout(e), e = window.setTimeout(r, 100);\n      }\n\n      return r(), window.addEventListener(\"resize\", t), () => window.removeEventListener(\"resize\", t);\n    }, []), e;\n  }(),\n        T = z ? DOMRect.fromRect({ ...z,\n    x: 0,\n    y: 0\n  }) : void 0,\n        {\n    popperStyles: k,\n    arrowStyles: L,\n    placedSide: B,\n    placedAlign: D\n  } = p({\n    anchorRect: E,\n    popperSize: S,\n    arrowSize: _,\n    arrowOffset: A,\n    side: l,\n    sideOffset: f,\n    align: m,\n    alignOffset: w,\n    shouldAvoidCollisions: x,\n    collisionBoundariesRect: T,\n    collisionTolerance: h\n  }),\n        H = void 0 !== B;\n  /*#__PURE__*/\n\n\n  return s.createElement(\"div\", {\n    style: k,\n    \"data-radix-popper-content-wrapper\": \"\"\n  }, /*#__PURE__*/s.createElement(u, {\n    scope: c,\n    arrowStyles: L,\n    onArrowChange: O,\n    onArrowOffsetChange: g\n  }, /*#__PURE__*/s.createElement(o.div, a({\n    \"data-side\": B,\n    \"data-align\": D\n  }, v, {\n    style: { ...v.style,\n      animation: H ? void 0 : \"none\"\n    },\n    ref: b\n  }))));\n});\n/*#__PURE__*/\n\nexport const PopperArrow = /*#__PURE__*/s.forwardRef(function (o, r) {\n  const {\n    __scopePopper: t,\n    offset: n,\n    ...i\n  } = o,\n        p = m(\"PopperArrow\", t),\n        {\n    onArrowOffsetChange: c\n  } = p;\n  return s.useEffect(() => c(n), [c, n]), /*#__PURE__*/s.createElement(\"span\", {\n    style: { ...p.arrowStyles,\n      pointerEvents: \"none\"\n    }\n  }, /*#__PURE__*/s.createElement(\"span\", {\n    ref: p.onArrowChange,\n    style: {\n      display: \"inline-block\",\n      verticalAlign: \"top\",\n      pointerEvents: \"auto\"\n    }\n  }, /*#__PURE__*/s.createElement(e.Root, a({}, i, {\n    ref: r,\n    style: { ...i.style,\n      display: \"block\"\n    }\n  }))));\n});\n/*#__PURE__*/\n\nexport const Root = Popper;\nexport const Anchor = PopperAnchor;\nexport const Content = PopperContent;\nexport const Arrow = PopperArrow;","map":{"version":3,"sources":["packages/react/popper/src/Popper.tsx"],"names":["createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","useState","_react","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperProvider","scope","onAnchorChange","PopperAnchor","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useComposedRefs","useEffect","current","Primitive","div","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","collisionTolerance","avoidCollisions","contentProps","arrowOffset","setArrowOffset","anchorRect","useRect","content","setContent","contentSize","useSize","arrow","setArrow","arrowSize","node","windowSize","useWindowSize","collisionBoundariesRect","DOMRect","fromRect","x","y","undefined","popperStyles","arrowStyles","placedSide","placedAlign","getPlacementData","popperSize","shouldAvoidCollisions","isPlaced","style","$d4fb2a15a6483a4f85af0f96fd68687d$var$PopperContentProvider","onArrowChange","onArrowOffsetChange","animation","PopperArrow","offset","arrowProps","pointerEvents","display","verticalAlign","_radixUiReactArrow","Root","setWindowSize","debounceTimerId","updateWindowSize","width","window","innerWidth","height","innerHeight","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","Anchor","Content","Arrow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getPlacementData } from '@radix-ui/popper';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useRect } from '@radix-ui/react-use-rect';\nimport { useSize } from '@radix-ui/react-use-size';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Side, Align } from '@radix-ui/popper';\nimport type { Measurable } from '@radix-ui/rect';\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  arrowStyles: React.CSSProperties;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  onArrowOffsetChange(offset?: number): void;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  collisionTolerance?: number;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset,\n      align = 'center',\n      alignOffset,\n      collisionTolerance,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [arrowOffset, setArrowOffset] = React.useState<number>();\n    const anchorRect = useRect(context.anchor);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const contentSize = useSize(content);\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const windowSize = useWindowSize();\n    const collisionBoundariesRect = windowSize\n      ? DOMRect.fromRect({ ...windowSize, x: 0, y: 0 })\n      : undefined;\n\n    const { popperStyles, arrowStyles, placedSide, placedAlign } = getPlacementData({\n      anchorRect,\n      popperSize: contentSize,\n      arrowSize,\n\n      // config\n      arrowOffset,\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      shouldAvoidCollisions: avoidCollisions,\n      collisionBoundariesRect,\n      collisionTolerance,\n    });\n    const isPlaced = placedSide !== undefined;\n\n    return (\n      <div style={popperStyles} data-radix-popper-content-wrapper=\"\">\n        <PopperContentProvider\n          scope={__scopePopper}\n          arrowStyles={arrowStyles}\n          onArrowChange={setArrow}\n          onArrowOffsetChange={setArrowOffset}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPlaced ? 'none' : undefined,\n            }}\n            ref={composedRefs}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {\n  offset?: number;\n}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, offset, ...arrowProps } = props;\n  const context = useContentContext(ARROW_NAME, __scopePopper);\n  const { onArrowOffsetChange } = context;\n\n  // send the Arrow's offset up to Popper\n  React.useEffect(() => onArrowOffsetChange(offset), [onArrowOffsetChange, offset]);\n\n  return (\n    <span style={{ ...context.arrowStyles, pointerEvents: 'none' }}>\n      <span\n        // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n        // doesn't report size as we'd expect on SVG elements.\n        // it reports their bounding box which is effectively the largest path inside the SVG.\n        ref={context.onArrowChange}\n        style={{\n          display: 'inline-block',\n          verticalAlign: 'top',\n          pointerEvents: 'auto',\n        }}\n      >\n        <ArrowPrimitive.Root\n          {...arrowProps}\n          ref={forwardedRef}\n          style={{\n            ...arrowProps.style,\n            // ensures the element can be measured correctly (mostly for if SVG)\n            display: 'block',\n          }}\n        />\n      </span>\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS = 100;\n\nfunction useWindowSize() {\n  const [windowSize, setWindowSize] = React.useState<{ width: number; height: number } | undefined>(\n    undefined\n  );\n\n  React.useEffect(() => {\n    let debounceTimerId: number;\n\n    function updateWindowSize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    function handleResize() {\n      window.clearTimeout(debounceTimerId);\n      debounceTimerId = window.setTimeout(updateWindowSize, WINDOW_RESIZE_DEBOUNCE_WAIT_IN_MS);\n    }\n\n    updateWindowSize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"]},"metadata":{},"sourceType":"module"}