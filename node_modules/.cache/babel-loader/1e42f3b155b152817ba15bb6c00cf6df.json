{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfile/admin.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUser, updateUser, deleteBlog } from '../../reducer/action';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = props => {\n  _s();\n\n  let state = useSelector(state => state.allData);\n  const [currentId, setCurrentId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [count, setCount] = useState(0);\n  const dispatch = useDispatch();\n  const [userData, setuserData] = useState({\n    title: '',\n    text: '',\n    name: '',\n    file: []\n  });\n  let images = [];\n\n  const handleChangetext = e => {\n    setuserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const update = useSelector(state => currentId ? state.allData.find(blog => blog._id === currentId) : null);\n\n  const handleChangefile = e => {\n    setuserData({ ...userData,\n      file: [...userData.file, e.target.files[0]]\n    });\n  };\n\n  useEffect(() => {\n    if (update) {\n      setuserData(update);\n    }\n  }, [update, count]);\n\n  function handleUpdateimg(index) {\n    userData.file.splice(index, 1);\n    setCount(count + 1);\n  }\n\n  console.log(userData);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      if (userData.title && userData.text && userData.name && userData.file) {\n        userData.blogName = userData.name.replace(/[^a-zA-Z ]/g, \"\");\n        dispatch(createUser(userData));\n        setuserData({\n          title: '',\n          text: '',\n          blogName: '',\n          file: []\n        });\n      } else {\n        alert(\"please insert data\");\n      }\n    } else {\n      dispatch(updateUser(currentId, userData));\n      setCurrentId(0);\n      setuserData({\n        title: '',\n        text: '',\n        blogName: '',\n        files: []\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (deleteId) {\n      dispatch(deleteBlog(deleteId));\n      console.log(deleteId);\n    }\n\n    console.log();\n  }, [deleteId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              autoComplete: \"off\",\n              className: \"admin-form\",\n              action: \"/upload\",\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [\"name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"text\",\n                  name: \"name\",\n                  variant: \"outlined\",\n                  id: \"name\",\n                  onChange: handleChangetext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"text\",\n                  name: \"title\",\n                  variant: \"outlined\",\n                  id: \"title\",\n                  onChange: handleChangetext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                required: true,\n                htmlFor: \"text\",\n                children: [\"text\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"text\",\n                  variant: \"outlined\",\n                  id: \"text\",\n                  onChange: handleChangetext\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file1\",\n                accept: \"image/png, image/jpeg\" // onChange={(e) => {\n                //   setuserData({\n                //       ...userData, file:  [ ...userData.file, e.target.files[0] ],\n                //     })\n                // }}\n                ,\n                onChange: handleChangefile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file2\",\n                accept: \"image/png, image/jpeg\" // onChange={(e) => setuserData({\n                //       ...userData, file: [ ...userData.file, e.target.files[0] ],\n                //       ...userData, filenameone: e.target.files[0].name ,\n                //     })}\n                // onChange={(e) => {\n                //   setuserData({\n                //       ...userData, file:  [ ...userData.file, e.target.files[0] ],\n                //     })\n                // }}\n                ,\n                onChange: handleChangefile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                onClick: handlerSubmit,\n                children: \"G\\xF6nd\\u0259r\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: state.map(blog => {\n            const {\n              _id,\n              blogName,\n              file,\n              text,\n              title\n            } = blog; // console.log(blog)\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [file.map((image, index) => {\n                  const {\n                    filepath\n                  } = image;\n                  console.log(image);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: update ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => handleUpdateimg(index),\n                        children: \"remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 42\n                      }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"card-img-top\",\n                        src: `http://localhost:5000/${filepath}`,\n                        alt: \"img\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 171,\n                        columnNumber: 39\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 37\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"card-img-top\",\n                        src: `http://localhost:5000/${filepath}`,\n                        alt: \"img\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 39\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 37\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 31\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [\"title: \", title, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"card-subtitle mb-2 text-muted\",\n                    children: [\"blogName \", blogName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"text: \", text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success btn-sm\",\n                    onClick: () => setCurrentId(_id),\n                    children: \"update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn  btn-danger btn-sm\",\n                    onClick: () => setDeleteId(_id),\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 23\n              }, this)\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"WcfmsFR3hsDIDTGQtGuvC8I5F7U=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfile/admin.js"],"names":["React","useState","useEffect","useDispatch","createUser","updateUser","deleteBlog","useSelector","Admin","props","state","allData","currentId","setCurrentId","deleteId","setDeleteId","count","setCount","dispatch","userData","setuserData","title","text","name","file","images","handleChangetext","e","target","value","update","find","blog","_id","handleChangefile","files","handleUpdateimg","index","splice","console","log","handlerSubmit","preventDefault","blogName","replace","alert","map","image","filepath"],"mappings":"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","sourcesContent":["import {React, useState,useEffect} from 'react'\nimport {useDispatch } from 'react-redux';\nimport {createUser, updateUser, deleteBlog} from '../../reducer/action'\nimport { useSelector } from 'react-redux';\n\nconst Admin = (props) =>{\n  let state = useSelector((state) => state.allData)\n  const [currentId, setCurrentId] = useState(0)\n  const [deleteId, setDeleteId] = useState(0)\n  const [count, setCount] = useState(0)\n  const dispatch = useDispatch()\n  const [userData, setuserData] =  useState({ \n    title: '', \n    text: '', \n    name: '', \n    file: [],\n  })\n  let images = []\n\n  const handleChangetext = (e) => {\n    setuserData({...userData, [e.target.name]: e.target.value})\n  }\n\n  const update = useSelector((state) =>(\n    currentId ? state.allData.find((blog) => blog._id === currentId) : null\n  ))\n\n  const handleChangefile = (e) => {\n    setuserData({...userData, file:  [ ...userData.file, e.target.files[0] ],})\n  }\n\n\n\n  \n  \n\n    useEffect(() => {\n      if(update){\n        setuserData(update)\n      }\n      \n    }, [update, count])\n\n\n    function handleUpdateimg(index) {\n      userData.file.splice(index, 1)\n      setCount(count + 1)\n    }\n    console.log(userData)\n  const handlerSubmit = (e) =>{\n    e.preventDefault();\n    if(currentId === 0){\n      if(userData.title && userData.text && userData.name && userData.file){\n        userData.blogName = userData.name.replace(/[^a-zA-Z ]/g, \"\")\n        dispatch(createUser(userData));\n        setuserData({\n          title: '', \n          text: '', \n          blogName: '', \n          file: []\n        })\n      }else{\n        alert(\"please insert data\")\n      }\n    }else{\n      \n      dispatch(updateUser(currentId, userData))\n     \n      setCurrentId(0)\n      setuserData({\n        title: '', \n        text: '', \n        blogName: '', \n        files: [],\n      })\n    }\n    \n  }\n\n\n  useEffect(() => {\n    if(deleteId){\n      dispatch(deleteBlog(deleteId))\n      console.log(deleteId)\n    }\n    console.log()\n  }, [deleteId,dispatch])\n  \n  return(\n    <article >\n      <div className=\"container\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form autoComplete=\"off\" className='admin-form' action=\"/upload\" method='POST'  >\n              <label htmlFor=\"name\">name\n                <input required type='text' name=\"name\" variant=\"outlined\"  id='name' \n                  onChange={handleChangetext}\n                ></input> \n              </label>\n              <label htmlFor=\"title\">title\n              <input required type='text' name=\"title\" variant=\"outlined\" id='title' \n                onChange={handleChangetext}\n              ></input> \n\n              </label>\n              <label required htmlFor=\"text\">text\n                <textarea  name=\"text\" variant=\"outlined\" id='text' \n                  onChange={handleChangetext}\n                ></textarea> \n              </label> \n              <input\n              type=\"file\"\n              name=\"file1\"\n              accept=\"image/png, image/jpeg\"\n              // onChange={(e) => {\n              //   setuserData({\n              //       ...userData, file:  [ ...userData.file, e.target.files[0] ],\n              //     })\n              // }}\n              onChange={handleChangefile}\n              />\n              <input\n              type=\"file\"\n              name=\"file2\"\n              accept=\"image/png, image/jpeg\"\n              // onChange={(e) => setuserData({\n              //       ...userData, file: [ ...userData.file, e.target.files[0] ],\n              //       ...userData, filenameone: e.target.files[0].name ,\n              //     })}\n              // onChange={(e) => {\n              //   setuserData({\n              //       ...userData, file:  [ ...userData.file, e.target.files[0] ],\n              //     })\n              // }}\n              onChange={handleChangefile}\n              />\n\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handlerSubmit} >Göndər</button>\n              </form> \n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div className=\"container\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n\n              {\n                state.map((blog) =>{\n            const {_id, blogName, file, text,title} = blog\n                  // console.log(blog)\n            return(\n                    <div className=\"col-md-4\" key={_id}>\n                      <div className=\"card\" >\n                        {\n                          file.map((image, index)=>{\n                            const {filepath} = image\n                            console.log(image)\n                            return(\n                              <div key={index}>\n                                {\n                                  update ? (\n                                    <div key={index}>\n                                      {\n                                        _id ?\n                                        (<button onClick={() =>handleUpdateimg(index)}>remove</button>) :\n                                        (null)\n                                      }\n                                      <img className=\"card-img-top\" \n                                      src={`http://localhost:5000/${filepath}`} \n                                      alt=\"img\" />\n                                    </div>\n                                  ) : (\n                                    <div key={index}>\n                                      <img className=\"card-img-top\" \n                                      src={`http://localhost:5000/${filepath}`} \n                                      alt=\"img\" />\n                                    </div>\n                                  )\n                                }\n                              </div>\n                            )\n                          })\n                        }\n                        <div className=\"card-body\">\n                          <h5 className=\"card-title\">title: {title} </h5>\n                          <h6 className=\"card-subtitle mb-2 text-muted\">blogName {blogName}</h6>\n                          <p className=\"card-text\">text: {text}</p>\n                          \n                          <button\n                              className=\"btn btn-success btn-sm\"\n                              onClick={()=> setCurrentId(_id)}\n                            >\n                              update\n                            </button>\n                          <button\n                            className=\"btn  btn-danger btn-sm\"\n                            onClick={()=> setDeleteId(_id)} >\n                            delete\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })\n              }\n\n\n            </div>\n          </div>\n        </div>\n\n        \n\n     \n      \n    </article>\n  )\n\n}\n\nexport default Admin\n"]},"metadata":{},"sourceType":"module"}