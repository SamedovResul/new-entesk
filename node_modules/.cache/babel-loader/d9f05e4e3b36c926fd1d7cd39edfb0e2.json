{"ast":null,"code":"import { useLayoutEffect as e } from \"@radix-ui/react-use-layout-effect\";\nimport * as t from \"react\";\n\nconst r = t[\"useId\".toString()] || (() => {});\n\nlet i = 0;\nexport function useId(n) {\n  const [o, s] = t.useState(r());\n  return e(() => {\n    n || s(e => null != e ? e : String(i++));\n  }, [n]), n || (o ? `radix-${o}` : \"\");\n}\nexport function IdProvider(_ref) {\n  let {\n    children: e\n  } = _ref;\n  return t.useEffect(() => {\n    console.warn(n);\n  }, []), /*#__PURE__*/t.createElement(t.Fragment, null, e);\n}\nconst n = \"Warning: The `IdProvider` has been deprecated. For details, see https://radix-ui.com/docs/primitives/utilities/id-provider\";","map":{"version":3,"sources":["packages/react/id/src/id.tsx"],"names":["useReactId","React","count","useId","deterministicId","id","setId","useState","useLayoutEffect","reactId","String","IdProvider","children","useEffect","console","warn","ID_PROVIDER_DEPRECATED","_react"],"mappings":";;;AAIA,MAAMA,CAAAA,GAAcC,CAAAA,CAAc,QAAf,QAAe,EAAdA,CAAAA,KAAD,MAAA,CAAA,CAACA,CAApB;;AACA,IAAIC,CAAAA,GAAQ,CAAZ;AAAY,OAEZ,SAASC,KAAT,CAAeC,CAAf,EAAeA;AACb,QAAA,CAAOC,CAAP,EAAWC,CAAX,IAAoBL,CAAAA,CAAMM,QAANN,CAAmCD,CAAAA,EAAnCC,CAApB;AAKA,SAHAO,CAAAA,CAAgB,MAAA;AACTJ,IAAAA,CAAAA,IAAiBE,CAAAA,CAAOG,CAAAA,IAAYA,QAAAA,CAAAA,GAAAA,CAAAA,GAAWC,MAAAA,CAAOR,CAAAA,EAAPQ,CAA9BJ,CAAjBF;AAAsDF,GAD7DM,EAEG,CAACJ,CAAD,CAFHI,CAAAA,EAGOJ,CAAAA,KAAoBC,CAAAA,GAAM,SAAQA,CAAAA,EAAdA,GAAqB,EAAzCD,CAAP;AAAgD;AAAA,OAIlD,SAASO,UAAT,OAAsBC;AAAAA,MAAbD;AAAWC,IAAAA,QAAAA,EAAEA;AAAbD,GAAaC;AAIpB,SAHAX,CAAAA,CAAMY,SAANZ,CAAgB,MAAA;AACda,IAAAA,OAAAA,CAAQC,IAARD,CAAaE,CAAbF;AAAaE,GADff,EAEG,EAFHA,GAEG,aACIgB,CAAAA,CAAAA,aAAAA,CAAAA,CAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAGL,CAAHK,CAAP;AAGF;AAAA,MAAMD,CAAAA,GAA0B,4HAAhC","sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\n\n// We `toString()` to prevent bundlers from trying to `import { useId } from 'react';`\nconst useReactId = (React as any)['useId'.toString()] || (() => undefined);\nlet count = 0;\n\nfunction useId(deterministicId?: string): string {\n  const [id, setId] = React.useState<string | undefined>(useReactId());\n  // React versions older than 18 will have client-side ids only.\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\n\n// DEPRECATED\nfunction IdProvider({ children }: { children: React.ReactNode }) {\n  React.useEffect(() => {\n    console.warn(ID_PROVIDER_DEPRECATED);\n  }, []);\n  return <>{children}</>;\n}\n\nconst ID_PROVIDER_DEPRECATED = `Warning: The \\`IdProvider\\` has been deprecated. For details, see https://radix-ui.com/docs/primitives/utilities/id-provider`;\n\nexport { IdProvider, useId };\n"]},"metadata":{},"sourceType":"module"}