{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/teachers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreateTeacher, UpdateTeacher, GetTeacher } from '../../../../reducer/crmRedux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Classes = () => {\n  _s();\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    status: 0\n  });\n  const [id, setId] = useState({});\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.teacherReducer); // get teacher\n\n  useEffect(() => {\n    dispatch(GetTeacher());\n  }, []); // select update teacher\n\n  useEffect(() => {\n    state.map(classes => {\n      const {\n        _id\n      } = classes;\n\n      if (_id === id.id) {\n        setData(classes);\n      }\n    });\n  }, [id]); // create and update teacher\n\n  const createTeacher = e => {\n    if (id.id) {\n      dispatch(UpdateTeacher(id.id, data));\n      console.log(true);\n    } else {\n      dispatch(CreateTeacher(data));\n      console.log(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"create teacher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          id: \"name\",\n          value: data.name,\n          onChange: e => {\n            setData({ ...data,\n              name: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: data.email,\n          onChange: e => {\n            setData({ ...data,\n              email: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => {\n            setData({ ...data,\n              password: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: [\"status\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"\",\n          id: \"status\",\n          onChange: e => {\n            setData({ ...data,\n              status: parseInt(e.target.value)\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"select status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"0\",\n            children: \"inactive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        createTeacher();\n      },\n      children: id.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: state.map((clas, index) => {\n          const {\n            name,\n            _id,\n            email,\n            status\n          } = clas;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setId({\n                  id: _id\n                });\n              },\n              children: \"update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              value: _id,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"status: \", status === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"inactive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" name: \", name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Classes, \"bb5nTIEFosjAm3ztS24V8UhuwyY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/teachers.js"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","CreateTeacher","UpdateTeacher","GetTeacher","Classes","data","setData","name","email","password","status","id","setId","dispatch","state","teacherReducer","map","classes","_id","createTeacher","e","console","log","target","value","parseInt","clas","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { CreateTeacher, UpdateTeacher,GetTeacher} from '../../../../reducer/crmRedux/action';\n\nconst Classes = () => {\n  const [data, setData] = useState({\n    name:\"\",\n    email:\"\",\n    password:\"\",\n    status:0\n  })\n  const [id, setId] = useState({})\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.teacherReducer);\n\n  // get teacher\n  useEffect(() => {\n    dispatch(GetTeacher())\n  }, [])\n  \n\n    \n// select update teacher\n  useEffect(() => {\n    state.map((classes) =>{\n      const {_id} = classes\n      if(_id === id.id){\n        setData(classes)\n      }\n    })\n  }, [id])\n\n\n  // create and update teacher\n  const createTeacher = (e) =>{\n    if(id.id){\n      dispatch(UpdateTeacher(id.id,data))\n      console.log(true)\n    }else{\n      dispatch(CreateTeacher(data))\n      console.log(false)\n    }\n  }\n\n \n  return (\n    <div className='create-data'>\n      <p>create teacher</p>\n      <form action=\"\">\n        <label htmlFor=\"name\">\n          name\n          <input type=\"name\" id=\"name\"\n          value={data.name}\n            onChange={(e) =>{\n              setData({\n                ...data, name: e.target.value\n              })\n            }}\n          />\n        </label>\n        <label htmlFor=\"email\">\n          email\n          <input type=\"email\" id=\"email\" \n            value={data.email}\n            onChange={(e) =>{\n              setData({\n                ...data, email:e.target.value\n              })\n            }}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          password\n          <input type=\"password\" id=\"password\"\n            onChange={(e) =>{\n              setData({\n                ...data, password:e.target.value\n              })\n            }}\n              />\n        </label>\n        <label htmlFor=\"status\">\n          status\n          <select name=\"\" id=\"status\"\n            onChange={(e)=>{\n              setData({\n                ...data, status: parseInt(e.target.value) \n              })\n            }}\n          >\n            <option >select status</option>\n            <option value=\"0\">inactive</option>\n            <option value=\"1\">active</option>\n          </select>\n        </label>\n        \n      </form>\n      <button\n          onClick={() =>{\n            createTeacher()\n          }}\n        >\n          {\n            id.id ? (\n              <span>update</span> \n            ):(\n              <span>create</span> \n            )\n\n          }\n          \n      </button>\n      \n      <div className=\"data\">\n\n        <ul>\n          {\n            state.map((clas, index) =>{\n              const {name, _id,email,status } =clas\n              \n              return(\n                <div key={index}>\n                  <button\n                    onClick={()=>{\n                      setId({id: _id})\n                    }}\n                  >\n                    update\n                  </button>\n                  <li   value={_id} >\n                  <span>status: {\n                      status === 1? ( <span>active</span> ) :( <span>inactive</span> )\n                    } \n                  </span>\n                  </li>\n                  <li>\n                  <span> name: {name} </span>\n                  </li>\n                </div>\n\n              )\n            })\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Classes"]},"metadata":{},"sourceType":"module"}