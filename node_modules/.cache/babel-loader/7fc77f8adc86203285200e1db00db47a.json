{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SimpleReactLightbox from 'simple-react-lightbox';\nimport './firebase/firebase';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport alldata from './reducer/combine';\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n};\nconst store = createStore(alldata, compose(applyMiddleware(thunk)));\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(AlertProvider, {\n      template: AlertTemplate,\n      ...options,\n      children: /*#__PURE__*/_jsxDEV(SimpleReactLightbox, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/my-app/src/index.js"],"names":["React","ReactDOM","App","SimpleReactLightbox","Provider","createStore","applyMiddleware","compose","thunk","alldata","transitions","positions","AlertProvider","AlertTemplate","options","position","TOP_CENTER","timeout","offset","transition","SCALE","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCP,QAAQ,IAAIQ,aAA7C,QAAkE,aAAlE;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAO,sCAAP;;AAEA,MAAMC,OAAO,GAAG;AACd;AACAC,EAAAA,QAAQ,EAAEJ,SAAS,CAACK,UAFN;AAGdC,EAAAA,OAAO,EAAE,IAHK;AAIdC,EAAAA,MAAM,EAAE,MAJM;AAKd;AACAC,EAAAA,UAAU,EAAET,WAAW,CAACU;AANV,CAAhB;AASA,MAAMC,KAAK,GAAGhB,WAAW,CAACI,OAAD,EAAUF,OAAO,CAACD,eAAe,CAACE,KAAD,CAAhB,CAAjB,CAAzB;AACAP,QAAQ,CAACqB,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,yBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAER,aAAzB;AAAA,SAA4CC,OAA5C;AAAA,6BACE,QAAC,mBAAD;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,EAYES,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SimpleReactLightbox from 'simple-react-lightbox'\nimport './firebase/firebase'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport alldata from './reducer/combine'\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.TOP_CENTER,\n  timeout: 5000,\n  offset: '30px',\n  // you can also just use 'scale'\n  transition: transitions.SCALE\n}\n\nconst store = createStore(alldata, compose(applyMiddleware(thunk)))\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store} >\n          <AlertProvider template={AlertTemplate} {...options} >\n            <SimpleReactLightbox>\n              <App />\n            </SimpleReactLightbox>\n          </AlertProvider>\n        </Provider>\n    </React.StrictMode>\n  ,\n\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}