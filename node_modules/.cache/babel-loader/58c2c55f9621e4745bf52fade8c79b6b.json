{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUser, updateUser, deleteBlog } from '../../reducer/action';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nfunction AdminFunctions() {\n  _s();\n\n  let state = useSelector(state => state.allData);\n  const [currentId, setCurrentId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [count, setCount] = useState(0);\n  const [path, setPath] = useState(\"\");\n  const [slideimg, setSlideimg] = useState(\"\");\n  const [objectUrl, setObjectUrl] = useState(\"\");\n  console.log(slideimg);\n  const dispatch = useDispatch();\n  const [userData, setuserData] = useState({\n    title: '',\n    text: '',\n    name: '',\n    file: []\n  });\n  const {\n    _id\n  } = useParams();\n  console.log(_id);\n\n  const handleChangetext = e => {\n    setuserData({ ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const update = useSelector(state => _id ? state.allData.find(blog => blog._id === _id) : null);\n\n  const handleChangefile = e => {\n    setuserData({ ...userData,\n      file: [...userData.file, e.target.files[0]]\n    });\n    const reader = new FileReader(); // reader.onload = () =>{\n    //   if(reader.readyState === 2){\n    //     setObjectUrl(reader.result)\n    //   }\n    // }\n    // reader.readAsDataURL(e.target.files[0])\n  }; // console.log(objectUrl)\n\n\n  useEffect(() => {\n    if (update) {\n      setuserData(update);\n    }\n  }, [update]);\n\n  function handleUpdateimg(filepath) {\n    const itemToRemoveIndex = userData.file.findIndex(function (item) {\n      return item.filepath === filepath;\n    });\n    setCount(count + 1);\n    userData.file.splice(itemToRemoveIndex, 1);\n    return;\n  }\n\n  let Itemindex = false;\n  Itemindex = userData.file.filter(img => img.name === slideimg);\n  console.log(Itemindex);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (slideimg) {\n      if (slideimg !== userData.file[0].name) {\n        userData.file.splice(0, 0, Itemindex[0]);\n        userData.file.pop();\n      }\n    }\n\n    console.log(userData.file);\n\n    if (currentId === 0) {\n      if (userData.title && userData.text && userData.name && userData.file) {\n        userData.blogName = userData.name.replace(/[^a-zA-Z ]/g, \"\");\n        dispatch(createUser(userData));\n        setuserData({\n          title: '',\n          text: '',\n          blogName: '',\n          file: []\n        });\n      } else {\n        alert(\"please insert data\");\n      }\n    } else {\n      dispatch(updateUser(currentId, userData));\n      setCurrentId(0);\n      setuserData({\n        title: '',\n        text: '',\n        blogName: '',\n        file: []\n      });\n    }\n  }; // console.log(state)\n\n\n  useEffect(() => {\n    if (deleteId) {\n      dispatch(deleteBlog(deleteId)); // console.log(deleteId)\n    }\n\n    console.log();\n  }, [deleteId, dispatch]);\n  return {\n    handleChangetext,\n    setuserData,\n    handleChangefile,\n    setSlideimg,\n    update,\n    handlerSubmit,\n    state,\n    userData,\n    setCurrentId,\n    handleUpdateimg,\n    currentId\n  };\n}\n\n_s(AdminFunctions, \"rWMCIu1pHy9mDdS+x4aWDDVUqMU=\", false, function () {\n  return [useSelector, useDispatch, useParams, useSelector];\n});\n\n_c = AdminFunctions;\nexport default AdminFunctions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminFunctions\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfile/adminFunctions.js"],"names":["React","useState","useEffect","useDispatch","createUser","updateUser","deleteBlog","useSelector","useParams","AdminFunctions","state","allData","currentId","setCurrentId","deleteId","setDeleteId","count","setCount","path","setPath","slideimg","setSlideimg","objectUrl","setObjectUrl","console","log","dispatch","userData","setuserData","title","text","name","file","_id","handleChangetext","e","target","value","update","find","blog","handleChangefile","files","reader","FileReader","handleUpdateimg","filepath","itemToRemoveIndex","findIndex","item","splice","Itemindex","filter","img","handlerSubmit","preventDefault","pop","blogName","replace","alert"],"mappings":"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","sourcesContent":["import {React, useState,useEffect} from 'react'\nimport {useDispatch } from 'react-redux';\nimport {createUser, updateUser, deleteBlog} from '../../reducer/action'\nimport { useSelector } from 'react-redux';\nimport {useParams} from 'react-router-dom'\n\nfunction AdminFunctions() {\n  let state = useSelector((state) => state.allData)\n  const [currentId, setCurrentId] = useState(0)\n  const [deleteId, setDeleteId] = useState(0)\n  const [count, setCount] = useState(0)\n  const [path, setPath] = useState(\"\")\n  const [slideimg, setSlideimg] = useState(\"\")\n  const [objectUrl, setObjectUrl] = useState(\"\")\n  console.log(slideimg)\n  const dispatch = useDispatch()\n  const [userData, setuserData] =  useState({ \n    title: '', \n    text: '', \n    name: '', \n    file: [],\n  })\n  \n  const { _id } = useParams();\n  console.log(_id)\n  const handleChangetext = (e) => {\n    setuserData({...userData, [e.target.name]: e.target.value})\n  }\n\n  const update = useSelector((state) =>(\n    _id ? state.allData.find((blog) => blog._id === _id) : null\n  ))\n  \n  const handleChangefile = (e) => {\n    setuserData({...userData, file:  [ ...userData.file, e.target.files[0] ],})\n    \n    const reader = new FileReader();\n\n    // reader.onload = () =>{\n    //   if(reader.readyState === 2){\n    //     setObjectUrl(reader.result)\n    //   }\n    // }\n    // reader.readAsDataURL(e.target.files[0])\n  }\n  // console.log(objectUrl)\n  useEffect(() => {\n    if(update){\n      setuserData(update)\n    }\n  }, [update])\n\n  function handleUpdateimg(filepath) {\n\n    const itemToRemoveIndex = userData.file.findIndex( function(item) {\n      return item.filepath === filepath\n    })\n    setCount(count + 1)\n    userData.file.splice(itemToRemoveIndex, 1)\n    return \n  }\n\n\n  let Itemindex  = false\n   Itemindex = userData.file.filter((img) => img.name === slideimg)\n  console.log(Itemindex)\n  \n  const handlerSubmit = (e) =>{\n    e.preventDefault();\n\n    if(slideimg){\n      if(slideimg !== userData.file[0].name){\n        userData.file.splice(0,0, Itemindex[0] )\n        userData.file.pop()\n      } \n    }\n    console.log(userData.file)\n    \n\n    if(currentId === 0){\n      if(userData.title && userData.text && userData.name && userData.file){\n        userData.blogName = userData.name.replace(/[^a-zA-Z ]/g, \"\")\n        dispatch(createUser(userData));\n        setuserData({\n          title: '', \n          text: '', \n          blogName: '', \n          file: []\n        })\n      }else{\n        alert(\"please insert data\")\n      }\n    }else{\n      \n      dispatch(updateUser(currentId, userData))\n     \n      setCurrentId(0)\n      setuserData({\n        title: '', \n        text: '', \n        blogName: '', \n        file: []\n      })\n    }\n    \n  }\n  // console.log(state)\n\n  useEffect(() => {\n    if(deleteId){\n      dispatch(deleteBlog(deleteId))\n      // console.log(deleteId)\n    }\n    console.log()\n    \n  }, [deleteId,dispatch])\n\n\n  return{\n    handleChangetext,\n    setuserData,\n    handleChangefile,\n    setSlideimg,\n    update,\n    handlerSubmit,\n    state,\n    userData,\n    setCurrentId,\n    handleUpdateimg,\n    currentId\n  }\n\n}\n\nexport default AdminFunctions\n"]},"metadata":{},"sourceType":"module"}