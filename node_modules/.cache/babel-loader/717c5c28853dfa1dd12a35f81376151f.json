{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUser, updateUser, deleteBlog } from '../../../reducer/action';\nimport { useSelector } from 'react-redux';\n\nfunction AdminFunctions(id) {\n  _s();\n\n  let state = useSelector(state => state.allData);\n  const [currentId, setCurrentId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const [count, setCount] = useState(0);\n  const [path, setPath] = useState(\"\");\n  const [slideimg, setSlideimg] = useState(\"\");\n  const [objectUrl, setObjectUrl] = useState(\"\");\n  const dispatch = useDispatch();\n  const [userData, setuserData] = useState({\n    title: '',\n    text: '',\n    name: '',\n    file: []\n  }); // const handleChangetext = (e) => {\n  //   setuserData({...userData, [e.target.name]: e.target.value})\n  // }\n\n  const update = useSelector(state => id ? state.allData.find(blog => blog._id === id) : null); // const handleChangefile = (e) => {\n  //   setuserData({...userData, file:  [ ...userData.file, e.target.files[0] ],})\n  //   const reader = new FileReader();\n  //   // reader.onload = () =>{\n  //   //   if(reader.readyState === 2){\n  //   //     setObjectUrl(reader.result)\n  //   //   }\n  //   // }\n  //   // reader.readAsDataURL(e.target.files[0])\n  // }\n  // console.log(objectUrl)\n\n  useEffect(() => {\n    if (update) {\n      setuserData(update);\n      setCurrentId(id);\n    }\n  }, [update]);\n\n  function handleUpdateimg(filepath) {\n    const itemToRemoveIndex = userData.file.findIndex(function (item) {\n      return item.filepath === filepath;\n    });\n    setCount(count + 1);\n    userData.file.splice(itemToRemoveIndex, 1);\n    return;\n  }\n\n  let Itemindex = false;\n  Itemindex = userData.file.filter(img => img.name === slideimg); // console.log(Itemindex)\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (slideimg) {\n      if (slideimg !== userData.file[0].name) {\n        userData.file.splice(0, 0, Itemindex[0]);\n        userData.file.pop();\n      }\n    }\n\n    console.log(userData.file);\n    console.log(id);\n\n    if (currentId === 0) {\n      if (userData.title && userData.text && userData.name && userData.file) {\n        userData.blogName = userData.name.replace(/[^a-zA-Z ]/g, \"\");\n        dispatch(createUser(userData));\n        setuserData({\n          title: '',\n          text: '',\n          blogName: '',\n          file: []\n        });\n      } else {\n        alert(\"please insert data\");\n      }\n    } else {\n      dispatch(updateUser(currentId, userData));\n      setCurrentId(0);\n      setuserData({\n        title: '',\n        text: '',\n        blogName: '',\n        file: []\n      });\n    }\n  }; // console.log(state)\n\n\n  useEffect(() => {\n    if (deleteId) {\n      dispatch(deleteBlog(deleteId)); // console.log(deleteId)\n    }\n\n    console.log();\n  }, [deleteId, dispatch]);\n  return {\n    setuserData,\n    setSlideimg,\n    update,\n    handlerSubmit,\n    state,\n    userData,\n    setCurrentId,\n    handleUpdateimg,\n    currentId,\n    setDeleteId\n  };\n}\n\n_s(AdminFunctions, \"T4kToGAKP1GsuIvAWEFJaM8mo8s=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = AdminFunctions;\nexport default AdminFunctions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminFunctions\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/blogfolder/adminFunctions.js"],"names":["React","useState","useEffect","useDispatch","createUser","updateUser","deleteBlog","useSelector","AdminFunctions","id","state","allData","currentId","setCurrentId","deleteId","setDeleteId","count","setCount","path","setPath","slideimg","setSlideimg","objectUrl","setObjectUrl","dispatch","userData","setuserData","title","text","name","file","update","find","blog","_id","handleUpdateimg","filepath","itemToRemoveIndex","findIndex","item","splice","Itemindex","filter","img","handlerSubmit","e","preventDefault","pop","console","log","blogName","replace","alert"],"mappings":"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","sourcesContent":["import {React, useState,useEffect} from 'react'\nimport {useDispatch } from 'react-redux';\nimport {createUser, updateUser, deleteBlog} from '../../../reducer/action'\nimport { useSelector } from 'react-redux';\n\n\nfunction AdminFunctions(id) {\n  let state = useSelector((state) => state.allData)\n  const [currentId, setCurrentId] = useState(0)\n  const [deleteId, setDeleteId] = useState(0)\n  const [count, setCount] = useState(0)\n  const [path, setPath] = useState(\"\")\n  const [slideimg, setSlideimg] = useState(\"\")\n  const [objectUrl, setObjectUrl] = useState(\"\")\n  const dispatch = useDispatch()\n  const [userData, setuserData] =  useState({ \n    title: '', \n    text: '', \n    name: '', \n    file: [],\n  })\n  \n  // const handleChangetext = (e) => {\n  //   setuserData({...userData, [e.target.name]: e.target.value})\n  // }\n\n  const update = useSelector((state) =>(\n    id ? state.allData.find((blog) => blog._id === id) : null\n  ))\n  \n  // const handleChangefile = (e) => {\n  //   setuserData({...userData, file:  [ ...userData.file, e.target.files[0] ],})\n    \n  //   const reader = new FileReader();\n\n  //   // reader.onload = () =>{\n  //   //   if(reader.readyState === 2){\n  //   //     setObjectUrl(reader.result)\n  //   //   }\n  //   // }\n  //   // reader.readAsDataURL(e.target.files[0])\n  // }\n  // console.log(objectUrl)\n  useEffect(() => {\n    if(update){\n      setuserData(update)\n      setCurrentId(id)\n    }\n  }, [update])\n\n  function handleUpdateimg(filepath) {\n\n    const itemToRemoveIndex = userData.file.findIndex( function(item) {\n      return item.filepath === filepath\n    })\n    setCount(count + 1)\n    userData.file.splice(itemToRemoveIndex, 1)\n    return \n  }\n\n\n  let Itemindex  = false\n   Itemindex = userData.file.filter((img) => img.name === slideimg)\n  // console.log(Itemindex)\n  \n  const handlerSubmit = (e) =>{\n    e.preventDefault();\n\n    if(slideimg){\n      if(slideimg !== userData.file[0].name){\n        userData.file.splice(0,0, Itemindex[0] )\n        userData.file.pop()\n      } \n    }\n    console.log(userData.file)\n    \n    console.log(id)\n    if(currentId === 0){\n      if(userData.title && userData.text && userData.name && userData.file){\n        userData.blogName = userData.name.replace(/[^a-zA-Z ]/g, \"\")\n        dispatch(createUser(userData));\n        setuserData({\n          title: '', \n          text: '', \n          blogName: '', \n          file: []\n        })\n      }else{\n        alert(\"please insert data\")\n      }\n    }else{\n      \n      dispatch(updateUser(currentId, userData))\n     \n      setCurrentId(0)\n      setuserData({\n        title: '', \n        text: '', \n        blogName: '', \n        file: []\n      })\n    }\n    \n  }\n  // console.log(state)\n\n  useEffect(() => {\n    if(deleteId){\n      dispatch(deleteBlog(deleteId))\n      // console.log(deleteId)\n    }\n    console.log()\n    \n  }, [deleteId,dispatch])\n\n\n  return{\n    setuserData,\n    setSlideimg,\n    update,\n    handlerSubmit,\n    state,\n    userData,\n    setCurrentId,\n    handleUpdateimg,\n    currentId,\n    setDeleteId\n  }\n\n}\n\nexport default AdminFunctions\n"]},"metadata":{},"sourceType":"module"}