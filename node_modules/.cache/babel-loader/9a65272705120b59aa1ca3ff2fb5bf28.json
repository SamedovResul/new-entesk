{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfile/admin.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createUser, updateUser, deleteBlog } from '../../reducer/action';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = props => {\n  _s();\n\n  let state = useSelector(state => state.allData);\n  const [currentId, setCurrentId] = useState(0);\n  const [deleteId, setDeleteId] = useState(0);\n  const dispatch = useDispatch();\n  const [userData, setuserData] = useState({\n    title: '',\n    text: '',\n    blogName: '',\n    file: [],\n    filenameone: '',\n    filenametwo: ''\n  });\n  const update = useSelector(state => currentId ? state.allData.find(blog => blog._id === currentId) : null);\n  useEffect(() => {\n    if (update) {\n      setuserData(update);\n    }\n  }, [update]);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      if (userData.title && userData.text && userData.blogName && userData.file) {\n        userData.blogName = userData.blogName.replace(/[^a-zA-Z ]/g, \"\");\n        dispatch(createUser(userData));\n        setuserData({\n          title: '',\n          text: '',\n          blogName: '',\n          file: []\n        });\n      } else {\n        alert(\"please insert data\");\n      }\n    } else {\n      dispatch(updateUser(currentId, userData));\n      setCurrentId(0);\n      setuserData({\n        title: '',\n        text: '',\n        blogName: '',\n        files: []\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (deleteId) {\n      dispatch(deleteBlog(deleteId));\n      console.log(deleteId);\n    }\n\n    console.log();\n  }, [deleteId, dispatch]);\n  console.log(userData);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              autoComplete: \"off\",\n              className: \"admin-form\",\n              action: \"/upload\",\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [\"name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"text\",\n                  name: \"name\",\n                  variant: \"outlined\",\n                  id: \"name\",\n                  value: userData.blogName,\n                  onChange: e => setuserData({ ...userData,\n                    blogName: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  required: true,\n                  type: \"text\",\n                  name: \"title\",\n                  variant: \"outlined\",\n                  id: \"title\",\n                  value: userData.title,\n                  onChange: e => setuserData({ ...userData,\n                    title: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                required: true,\n                htmlFor: \"text\",\n                children: [\"text\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  name: \"text\",\n                  variant: \"outlined\",\n                  id: \"text\",\n                  value: userData.text,\n                  onChange: e => setuserData({ ...userData,\n                    text: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                accept: \"image/png, image/jpeg\",\n                onChange: e => {\n                  setuserData({ ...userData,\n                    file: [...userData.file, e.target.files[0]]\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                accept: \"image/png, image/jpeg\" // onChange={(e) => setuserData({\n                //       ...userData, file: [ ...userData.file, e.target.files[0] ],\n                //       ...userData, filenameone: e.target.files[0].name ,\n                //     })}\n                ,\n                onChange: e => {\n                  setuserData({ ...userData,\n                    file: [...userData.file, e.target.files[0]]\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                onClick: handlerSubmit,\n                children: \"G\\xF6nd\\u0259r\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: state.map(blog => {\n            const {\n              _id,\n              blogName,\n              file,\n              text,\n              title\n            } = blog;\n            console.log(blog);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [file.map((image, index) => {\n                  const {\n                    filepath\n                  } = image;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"card-img-top\",\n                      src: `http://localhost:5000/${filepath}`,\n                      alt: \"img\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 33\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 31\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    className: \"card-title\",\n                    children: [\"title: \", title, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                    className: \"card-subtitle mb-2 text-muted\",\n                    children: [\"blogName \", blogName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-text\",\n                    children: [\"text: \", text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-success btn-sm\",\n                    onClick: () => setCurrentId(_id),\n                    children: \"update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn  btn-danger btn-sm\",\n                    onClick: () => setDeleteId(_id),\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this)\n            }, _id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"8ehA8yr56faqOZuJ5iB27gBvnx4=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfile/admin.js"],"names":["React","useState","useEffect","useDispatch","createUser","updateUser","deleteBlog","useSelector","Admin","props","state","allData","currentId","setCurrentId","deleteId","setDeleteId","dispatch","userData","setuserData","title","text","blogName","file","filenameone","filenametwo","update","find","blog","_id","handlerSubmit","e","preventDefault","replace","alert","files","console","log","target","value","map","image","index","filepath"],"mappings":"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","sourcesContent":["import {React, useState,useEffect} from 'react'\nimport {useDispatch } from 'react-redux';\nimport {createUser, updateUser, deleteBlog} from '../../reducer/action'\nimport { useSelector } from 'react-redux';\n\nconst Admin = (props) =>{\n  let state = useSelector((state) => state.allData)\n  const [currentId, setCurrentId] = useState(0)\n  const [deleteId, setDeleteId] = useState(0)\n  const dispatch = useDispatch()\n  const [userData, setuserData] =  useState({ \n    title: '', \n    text: '', \n    blogName: '', \n    file: [],\n    filenameone: '',\n    filenametwo: ''\n  })\n\n\n  const update = useSelector((state) =>(\n    currentId ? state.allData.find((blog) => blog._id === currentId) : null\n  ))\n\n    useEffect(() => {\n      if(update){\n        setuserData(update)\n      }\n    }, [update])\n\n\n  const handlerSubmit = (e) =>{\n    e.preventDefault();\n    if(currentId === 0){\n      if(userData.title && userData.text && userData.blogName && userData.file){\n        userData.blogName = userData.blogName.replace(/[^a-zA-Z ]/g, \"\")\n        dispatch(createUser(userData));\n        setuserData({\n          title: '', \n          text: '', \n          blogName: '', \n          file: []\n        })\n      }else{\n        alert(\"please insert data\")\n      }\n    }else{\n      \n      dispatch(updateUser(currentId, userData))\n     \n      setCurrentId(0)\n      setuserData({\n        title: '', \n        text: '', \n        blogName: '', \n        files: [],\n      })\n    }\n    \n  }\n\n\n  useEffect(() => {\n    if(deleteId){\n      dispatch(deleteBlog(deleteId))\n      console.log(deleteId)\n    }\n    console.log()\n  }, [deleteId,dispatch])\n  \n  \n  console.log(userData)\n  \n  console.log(state)\n  return(\n    <article >\n      <div className=\"container\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form autoComplete=\"off\" className='admin-form' action=\"/upload\" method='POST'  >\n              <label htmlFor=\"name\">name\n                <input required type='text' name=\"name\" variant=\"outlined\"  id='name' value={userData.blogName}\n                  onChange={(e) => setuserData({\n                    ...userData, blogName: e.target.value  \n                  })}\n                ></input> \n              </label>\n              <label htmlFor=\"title\">title\n              <input required type='text' name=\"title\" variant=\"outlined\" id='title' value={userData.title}\n                onChange={(e) => setuserData({\n                  ...userData, title: e.target.value  \n                })}\n              ></input> \n\n              </label>\n              <label required htmlFor=\"text\">text\n                <textarea  name=\"text\" variant=\"outlined\" id='text' value={userData.text}\n                  onChange={(e) => setuserData({\n                    ...userData, text: e.target.value  \n                  })}\n                ></textarea> \n              </label> \n              <input\n              type=\"file\"\n              name=\"file\"\n              accept=\"image/png, image/jpeg\"\n              onChange={(e) => {\n                setuserData({\n                    ...userData, file:  [ ...userData.file, e.target.files[0] ],\n                  })\n              }}\n              />\n              <input\n              type=\"file\"\n              name=\"file\"\n              accept=\"image/png, image/jpeg\"\n              // onChange={(e) => setuserData({\n              //       ...userData, file: [ ...userData.file, e.target.files[0] ],\n              //       ...userData, filenameone: e.target.files[0].name ,\n              //     })}\n              onChange={(e) => {\n                setuserData({\n                    ...userData, file:  [ ...userData.file, e.target.files[0] ],\n                  })\n              }}\n              />\n\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handlerSubmit} >Göndər</button>\n              </form> \n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div className=\"container\">\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n\n              {\n                state.map((blog) =>{\n            const {_id, blogName, file, text,title} = blog\n                  console.log(blog)\n            return(\n                    <div className=\"col-md-4\" key={_id}>\n                      <div className=\"card\" >\n                        {\n                          file.map((image, index)=>{\n                            const {filepath} = image\n\n                            return(\n                              <div key={index}>\n                                <img className=\"card-img-top\" \n                                src={`http://localhost:5000/${filepath}`} \n                                alt=\"img\" />\n                              </div>\n                              \n                            )\n                          })\n                        }\n                        <div className=\"card-body\">\n                          <h5 className=\"card-title\">title: {title} </h5>\n                          <h6 className=\"card-subtitle mb-2 text-muted\">blogName {blogName}</h6>\n                          <p className=\"card-text\">text: {text}</p>\n                          \n                          <button\n                              className=\"btn btn-success btn-sm\"\n                              onClick={()=> setCurrentId(_id)}\n                            >\n                              update\n                            </button>\n                          <button\n                            className=\"btn  btn-danger btn-sm\"\n                            onClick={()=> setDeleteId(_id)} >\n                            delete\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                })\n              }\n\n\n            </div>\n          </div>\n        </div>\n\n        \n\n     \n      \n    </article>\n  )\n\n}\n\nexport default Admin\n"]},"metadata":{},"sourceType":"module"}