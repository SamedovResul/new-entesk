{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CreateStudent, UpdateStudent, GetStudent } from '../../../../reducer/crmRedux/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Classes = () => {\n  _s();\n\n  const [data, setData] = useState({\n    firstName: \"\",\n    secondName: \"\",\n    age: 0,\n    status: 0\n  });\n  const [id, setId] = useState({});\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.studentReducer); // get student\n\n  useEffect(() => {\n    dispatch(GetStudent());\n  }, []); // select update student\n\n  useEffect(() => {\n    state.map(classes => {\n      const {\n        _id\n      } = classes;\n\n      if (_id === id.id) {\n        setData(classes);\n      }\n    });\n  }, [id]); // create and update student\n\n  const createClass = e => {\n    if (id.id) {\n      dispatch(UpdateStudent(id.id, data));\n      setData({\n        firstName: \"\",\n        secondName: \"\",\n        age: 0\n      });\n    } else {\n      dispatch(CreateStudent(data));\n      setData({\n        firstName: \"\",\n        secondName: \"\",\n        age: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-admin  create-student\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"create Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              action: \"\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"firstName :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"name\",\n                  id: \"name\",\n                  value: data.firstName,\n                  onChange: e => {\n                    setData({ ...data,\n                      firstName: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"secondName\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"secondName :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"secondName\",\n                  id: \"secondName\",\n                  value: data.secondName,\n                  onChange: e => {\n                    setData({ ...data,\n                      secondName: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"number\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"age :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"password\",\n                  value: data.age,\n                  onChange: e => {\n                    setData({ ...data,\n                      age: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"status\",\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"\",\n                  id: \"status\",\n                  onChange: e => {\n                    setData({ ...data,\n                      status: parseInt(e.target.value)\n                    });\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"select status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"inactive\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"1\",\n                    children: \"active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 22\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                createClass();\n              },\n              children: id.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), state.map((student, index) => {\n          const {\n            firstName,\n            secondName,\n            age,\n            status,\n            _id\n          } = student;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Student fullname:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 25\n                }, this), \" \", firstName, \", \", secondName, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Age:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 25\n                }, this), \" \", age, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setId({\n                    id: _id\n                  });\n                },\n                children: \"update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, _id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Classes, \"iRgO+bNHf0mAXT8tJ8jGEwSvbaI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Classes;\nexport default Classes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classes\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/admin/create/students.js"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","CreateStudent","UpdateStudent","GetStudent","Classes","data","setData","firstName","secondName","age","status","id","setId","dispatch","state","studentReducer","map","classes","_id","createClass","e","target","value","parseInt","student","index"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { useSelector,useDispatch } from 'react-redux';\nimport { CreateStudent, UpdateStudent,GetStudent} from '../../../../reducer/crmRedux/action';\n\nconst Classes = () => {\n  const [data, setData] = useState({\n    firstName:\"\",\n    secondName:\"\",\n    age:0,\n    status:0\n  })\n  const [id, setId] = useState({})\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.studentReducer);\n\n\n  // get student\n  useEffect(() => {\n    dispatch(GetStudent())\n  }, [])\n  \n    \n// select update student\n  useEffect(() => {\n    state.map((classes) =>{\n      const {_id} = classes\n      if(_id === id.id){\n        setData(classes)\n      }\n    })\n  }, [id])\n\n\n  // create and update student\n  const createClass = (e) =>{\n    if(id.id){\n      dispatch(UpdateStudent(id.id,data))\n      setData({\n        firstName:\"\",\n        secondName:\"\",\n        age:0,\n      })\n    }else{\n      dispatch(CreateStudent(data))\n      setData({\n        firstName:\"\",\n        secondName:\"\",\n        age:0,\n      })\n    }\n  }\n\n \n  return (\n    <div className=\"container\">\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"create-admin  create-student\">\n            <p>create Student</p>\n               <form action=\"\">\n                 <label htmlFor=\"name\">\n                   <b>firstName :</b>\n                   <input type=\"name\" id=\"name\"\n                   value={data.firstName}\n                     onChange={(e) =>{\n                       setData({\n                         ...data, firstName: e.target.value\n                       })\n                     }}\n                   />\n                 </label>\n                 <label htmlFor=\"secondName\">\n                    <b>secondName :</b>\n                   <input type=\"secondName\" id=\"secondName\" \n                     value={data.secondName}\n                     onChange={(e) =>{\n                       setData({\n                         ...data, secondName:e.target.value\n                       })\n                     }}\n                   />\n                 </label>\n                 <label htmlFor=\"number\">\n                    <b>age :</b>\n                   <input type=\"number\" id=\"password\"\n                     value={data.age}\n                     onChange={(e) =>{\n                       setData({\n                         ...data, age:e.target.value\n                       })\n                     }}\n                       />\n                 </label>\n                 <label htmlFor=\"status\">\n                    <b>status</b>\n                   <select name=\"\" id=\"status\"\n                     onChange={(e)=>{\n                       setData({\n                         ...data, status: parseInt(e.target.value) \n                       })\n                     }}\n                   >\n                     <option >select status</option>\n                     <option value=\"0\">inactive</option>\n                     <option value=\"1\">active</option>\n                   </select>\n                 </label>\n               </form>\n               <button\n                    onClick={() =>{createClass()}}>\n                    {\n                      id.id ? (\n                        <span>update</span> \n                      ):(\n                        <span>create</span> \n                      )\n\n                    }\n                </button>\n            </div>\n          </div>\n          {\n            state.map((student, index) =>{\n              const {firstName,secondName,age,status,_id} = student;\n\n              return(\n                <div key={_id} className=\"col-md-4\">\n                  <div className=\"info-table\">\n                    <p> <b>Student fullname:</b> {firstName}, {secondName}  </p>\n                    <p> <b>Age:</b> {age}  </p>\n                    <button\n                      onClick={()=>{setId({id: _id}) }} >\n                      update\n                    </button>\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Classes"]},"metadata":{},"sourceType":"module"}