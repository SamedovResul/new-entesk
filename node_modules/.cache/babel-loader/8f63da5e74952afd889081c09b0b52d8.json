{"ast":null,"code":"var _jsxFileName = \"/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/blogfolder/Createblog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport adminFunctions from './adminFunctions';\nimport Input from './Input';\nimport BlogUpdate from './blogUpdate';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Createblog = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    setSlideimg,\n    setuserData,\n    update,\n    handlerSubmit,\n    userData,\n    handleUpdateimg,\n    currentId,\n    img1,\n    img2\n  } = adminFunctions(id); // console.log(update)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            autoComplete: \"off\",\n            className: \"admin-form\",\n            action: \"/upload\",\n            method: \"POST\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: [\"Blog name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                type: \"text\",\n                name: \"name\",\n                variant: \"outlined\",\n                value: userData.name,\n                id: \"name\",\n                onChange: e => setuserData({ ...userData,\n                  [e.target.name]: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: [\" Blog title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                required: true,\n                type: \"text\",\n                name: \"title\",\n                variant: \"outlined\",\n                value: userData.title,\n                id: \"title\",\n                onChange: e => setuserData({ ...userData,\n                  [e.target.name]: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              required: true,\n              htmlFor: \"text\",\n              children: [\"Content\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"text\",\n                variant: \"outlined\",\n                value: userData.text,\n                id: \"text\",\n                onChange: e => setuserData({ ...userData,\n                  [e.target.name]: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), update ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: userData.file.length == 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"fileUpload\",\n                  htmlFor: \"img\",\n                  children: [\" Upload picture\", /*#__PURE__*/_jsxDEV(Input, {\n                    setuserData: setuserData,\n                    userData: userData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: userData.file.length == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"fileUpload\",\n                    htmlFor: \"img\",\n                    children: [\" Upload title picture\", /*#__PURE__*/_jsxDEV(Input, {\n                      setuserData: setuserData,\n                      userData: userData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"fileUpload\",\n                    htmlFor: \"img\",\n                    children: [\" Upload content picture\", /*#__PURE__*/_jsxDEV(Input, {\n                      setuserData: setuserData,\n                      userData: userData\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: userData.file ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      id: \"file\",\n                      onChange: e => setSlideimg(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        select: \"selected\",\n                        children: \" set slide \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 31\n                      }, this), userData.file.map((file, index) => {\n                        // console.log(file)\n                        const {\n                          name\n                        } = file;\n                        return /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: name,\n                          children: [\" \", name, \" \"]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 37\n                        }, this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false) : null\n                }, void 0, false)\n              }, void 0, false)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fileUpload\",\n                htmlFor: \"img\",\n                children: [\" Upload title picture\", /*#__PURE__*/_jsxDEV(Input, {\n                  setuserData: setuserData,\n                  userData: userData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"fileUpload\",\n                htmlFor: \"img\",\n                children: [\" Upload content picture\", /*#__PURE__*/_jsxDEV(Input, {\n                  setuserData: setuserData,\n                  userData: userData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img1,\n                alt: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img2,\n                alt: \"img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), userData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"file\",\n                  onChange: e => setSlideimg(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    select: \"selected\",\n                    children: \" set slide \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 27\n                  }, this), userData.file.map((file, index) => {\n                    const {\n                      name\n                    } = file;\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: name,\n                      children: [\" \", name, \" \"]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 33\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false) : null]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              onClick: handlerSubmit,\n              children: update ? /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/adminblogs\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/adminblogs\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), update ? /*#__PURE__*/_jsxDEV(BlogUpdate, {\n            userData: userData,\n            currentId: currentId,\n            handleUpdateimg: handleUpdateimg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Createblog, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = Createblog;\nexport default Createblog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Createblog\");","map":{"version":3,"sources":["/Users/Gadimlie/Desktop/Entesk-folder/my-app/src/component/adminfolder/blogfolder/Createblog.js"],"names":["React","useEffect","Link","adminFunctions","Input","BlogUpdate","useParams","Createblog","id","setSlideimg","setuserData","update","handlerSubmit","userData","handleUpdateimg","currentId","img1","img2","name","e","target","value","title","text","file","length","map","index"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport adminFunctions from './adminFunctions'\nimport Input from './Input'\nimport BlogUpdate from './blogUpdate'\nimport {useParams} from 'react-router-dom'\n\n\nconst  Createblog = () => {\n\n\n  const { id } = useParams();\n  const {\n    setSlideimg,\n    setuserData,\n    update,\n    handlerSubmit,\n    userData,\n    handleUpdateimg,\n    currentId,\n    img1,\n    img2\n  } = adminFunctions(id)\n\n  // console.log(update)\n  return (\n    <div className=\"container\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form autoComplete=\"off\" className='admin-form' action=\"/upload\" method='POST'  >\n              <label htmlFor=\"name\">Blog name: \n                <input required type='text' name=\"name\" variant=\"outlined\" value={userData.name}  id='name' \n                  onChange={(e) =>setuserData({...userData, [e.target.name]: e.target.value})}\n                ></input> \n              </label>\n              <label htmlFor=\"title\"> Blog title:\n              <input required type='text' name=\"title\" variant=\"outlined\" value={userData.title} id='title' \n                onChange={(e) =>setuserData({...userData, [e.target.name]: e.target.value})}\n              ></input> \n\n              </label>\n              <label required htmlFor=\"text\">Content\n                <textarea  name=\"text\" variant=\"outlined\" value={userData.text} id='text' \n                  onChange={(e) =>setuserData({...userData, [e.target.name]: e.target.value})}\n                ></textarea> \n              </label> \n              {\n                update ? (\n                  <>\n                   {\n                     userData.file.length == 1 ?(\n                       <>\n                        <label className='fileUpload' htmlFor=\"img\"> Upload picture\n                          <Input setuserData={setuserData} userData={userData} />\n                        </label>\n                       </>\n                      \n                     ):(\n                      <>\n                      {\n                        userData.file.length == 0 ?(\n                          <>\n                            <label className='fileUpload' htmlFor=\"img\"> Upload title picture\n                              <Input setuserData={setuserData} userData={userData} />\n                            </label>\n                            <label className='fileUpload' htmlFor=\"img\"> Upload content picture\n                              <Input setuserData={setuserData} userData={userData} />\n                            </label>\n                          </>\n                        ):(\n                          <>\n                            {\n                          userData.file ? (\n                          <>\n                            <select id=\"file\" onChange={(e) => setSlideimg(e.target.value)} >\n                              <option select=\"selected\"> set slide </option>\n                              {\n                                userData.file.map((file, index) =>{\n                                  // console.log(file)\n                                  const {name} = file\n                                  return(\n                                    \n                                    <option key={index} value={name} > {name} </option>\n                                  )\n                                })\n                              }\n                            </select>\n                              </>\n                              ):(\n                                null\n                              )\n                            }\n                          </>\n                        )\n                      }\n                      </>\n                     )\n                   }\n                  </>\n                ):(\n                  <>\n                  <label className='fileUpload' htmlFor=\"img\"> Upload title picture\n                    <Input setuserData={setuserData} userData={userData} />\n                  </label>\n                  <label className='fileUpload' htmlFor=\"img\"> Upload content picture\n                    <Input setuserData={setuserData} userData={userData} />\n                  </label>\n                  <img src={img1} alt=\"img\" />\n                  <img src={img2} alt=\"img\" />\n                    {\n                      userData ? (\n                      <>\n                        <select id=\"file\" onChange={(e) => setSlideimg(e.target.value)} >\n                          <option select=\"selected\"> set slide </option>\n                          {\n                            userData.file.map((file, index) =>{\n                              const {name} = file\n                              return(\n                                \n                                <option key={index} value={name} > {name} </option>\n                              )\n                            })\n                          }\n                        </select>\n                      </>\n                      ):(\n                        null\n                      )\n                    }\n                    \n                  </>\n                )\n              }\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handlerSubmit} >\n                  {\n                    update ? (\n                      <Link to=\"/adminblogs\">\n                        <p>Update</p>\n                      </Link>\n                    ):(\n                      <Link to=\"/adminblogs\">\n                        <p>Create</p>\n                      </Link>\n                      \n                    )\n                  }\n                </button>\n              </form> \n              \n              {\n                update ? (\n                  <BlogUpdate userData={userData} currentId={currentId} handleUpdateimg={handleUpdateimg}  />\n                ):(\n                  null\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default Createblog\n"]},"metadata":{},"sourceType":"module"}